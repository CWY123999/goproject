// Code generated for package assets by go-bindata DO NOT EDIT. (@generated)
// sources:
// scripts/.gitignore
// scripts/.gitlab-ci-original.yml
// scripts/.gitlab-ci-template-for-multi-cluster-env.yml
// scripts/.gitlab-ci-template.backup.yml
// scripts/.gitlab-ci-template.yml
// scripts/.gitlab-ci.yml
// scripts/.golangci.yml
// scripts/Makefile
// scripts/build/default/dev/#ProjectName#/config.sh
// scripts/generate-configs.sh
// scripts/source/cmd/#ProjectName#/main.go_
// scripts/source/internal/pkg/manager/manager.go
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x3d\x6e\xc5\x20\x0c\x00\xe0\xdd\xa7\xb0\xd4\x8d\xc1\xef\x12\xef\x06\xe9\x1e\x11\x30\xc1\x2d\xc1\x08\x3b\x49\x7b\xfb\xaa\x3f\xea\xf6\x0d\xdf\x83\x24\x73\x7c\x00\x8d\xa9\x6f\x9c\x3c\x00\xd9\xd5\xe1\xb5\x9e\xc7\x66\x94\x37\xe0\xea\xff\x7e\xb2\xbd\xbb\x0e\x92\x2e\x40\xcf\x65\x5d\x5c\x27\x03\x99\xcb\xde\xff\x54\xb4\x65\x9e\x40\x97\x25\xcd\x0c\x54\xc5\x5c\xe7\x27\x04\xb2\x7b\x80\xc7\xdd\x00\x5e\xf0\xf7\xe3\x2d\x5e\x71\x4c\x2e\xf2\x81\x5a\xb0\x48\x63\xec\xf1\x60\x58\xc3\xf7\x8a\x43\x5b\x53\x4c\xda\x8b\xec\xa8\x13\x53\x4c\x95\x7f\x1a\x50\x58\x33\x97\x78\x36\x87\xaf\x00\x00\x00\xff\xff\xc8\x5e\x66\xf7\xc3\x00\x00\x00")

func scriptsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGitignore,
		"scripts/.gitignore",
	)
}

func scriptsGitignore() (*asset, error) {
	bytes, err := scriptsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.gitignore", size: 195, mode: os.FileMode(420), modTime: time.Unix(1636010444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGitlabCiOriginalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xfb\x77\xd3\xd6\x1d\xff\x5d\x7f\xc5\xb7\x8a\x53\x87\x2e\xb2\x62\xfa\x58\x6a\x8e\x7a\x06\xb6\x17\xcc\x62\x3b\x27\x0f\xb6\x1e\x46\xcd\x8d\x74\x23\x8b\xc8\xba\x3e\x92\x0c\xe1\x94\x9e\xe3\x10\x02\xe3\x91\x38\xb4\xa4\xb0\x10\x20\x19\x10\xb2\xee\x34\xce\x5a\x5a\x4c\x4c\xc6\x1f\x33\x5f\xc9\xfe\xa9\xff\xc2\x8e\x24\x3f\x14\xea\x24\xdb\xce\x3a\xfd\x74\xef\xfd\xbe\x1f\xf7\x73\xbf\x52\x72\x48\xc6\x11\xd0\xb1\xac\x18\xa6\x7e\x29\x24\x6a\xdc\x24\x56\xce\x2b\x9a\x1c\x42\xaa\x72\xa9\xa0\x89\x46\x48\x24\x39\xfe\xbc\x82\x66\x14\xa4\xc9\xbc\x4c\x26\x0b\x8a\x2a\x61\xfd\x68\x44\x45\x26\x36\x4c\x86\xb9\x80\x74\x05\x4d\xaa\xd8\x88\x30\x00\x00\x43\xe9\x91\xe3\xe3\x27\x23\x10\x88\x26\x32\x23\xa3\xe9\x53\xf1\xe8\x78\x26\x96\x18\xe5\x43\x32\x71\xe9\xd1\x64\xcc\x63\x74\x3e\x09\x1b\xa2\xae\xe4\x4d\x85\x68\x11\x60\xeb\x1b\xb3\xf6\xeb\xaf\xeb\xe5\x3b\xf6\xca\x55\x5a\x2a\x5b\x37\x9e\xd7\xd7\x6f\x5b\x5f\x5f\xaf\x55\x7f\xa4\x4b\x0b\x3f\xbd\xbe\x4d\x17\xbe\x07\x31\x27\x41\xad\x72\x0b\x72\x48\xd1\x42\x32\x01\xeb\x46\x91\xae\x6e\xda\x0f\xb6\xe8\xee\x32\x5d\x5a\xb0\x9f\x6f\xff\xb3\x78\xa5\x8f\x3e\x5d\xa9\x55\xbe\xf1\xf6\xb4\x54\xae\xed\xbe\xb1\xef\x6e\xd2\x85\x9b\xf5\xe7\x5f\x36\x8a\xf7\x68\xe9\x25\xfd\xd3\xb5\xc6\xca\xdd\x9f\x5e\xdf\x46\xaa\x0a\xf5\xf5\x4d\xfb\xe9\x0e\x2d\xdd\xa1\x95\x39\xeb\x46\xd1\x5a\xbd\xd1\x32\x63\xaf\x5c\xf5\xbb\x71\x84\x6d\xbb\x7e\x01\xa9\x05\x1c\x01\xd6\x3b\x89\xa7\x4e\x1f\x10\x95\xa7\xd9\x5e\xb9\x6a\x2f\x96\xe9\x5f\xe6\x9a\x91\xb8\x99\x84\x5a\x65\x11\x44\xa2\x4d\x29\xb2\xd1\x34\x48\xbf\x5d\x7a\x2b\x9c\xfd\xac\x9e\x9a\x48\x8e\x8c\xc7\xc7\xc6\xf7\x33\x6d\xdd\x2f\xd3\xa5\x8d\xfa\xc6\x6c\xfd\xe5\xf7\xf5\x37\xd7\x6b\xd5\x27\xf6\xda\x6c\xe3\xe1\x9f\xad\xe2\xac\xf5\xa4\x68\x3d\x7e\x46\xbf\xbc\x6d\xfd\x70\xab\x5e\x5e\x86\xbe\x81\xcb\xe1\x2e\xd1\x0d\x78\x47\x13\x63\xf1\xe8\x50\xfa\x60\x33\x5e\x8e\x41\x94\xc9\x01\xca\x98\x49\x3c\x45\x74\x9c\xf1\xc4\x3d\x85\x1c\x48\xc8\xc4\x10\xfc\x55\xef\xa7\x5c\x6f\x8e\xeb\x95\xa0\xf7\x64\xa4\x37\x19\xe9\x1d\x0b\xf5\xa6\x82\x4d\x16\x65\x0a\xce\x40\x20\x9a\x8c\x81\x00\x2c\x52\x55\x16\xce\x1e\x03\x33\x8b\x35\x38\x1d\x4d\xc6\x84\x40\x9f\x6a\xb8\x35\xbb\x0c\xb2\x8e\xf3\xc0\x5d\x00\xbe\xb5\x0e\x7e\x76\xe6\xb3\xcc\xd9\x20\x5c\x86\x19\xa4\xcb\x06\x60\x31\x4b\xe0\x32\x18\x58\x82\xa0\xc1\x03\xdf\xcf\xcb\xc1\x23\xc7\x60\x4a\x39\xd6\xb4\xe5\x29\x74\xd9\x5c\x8b\x3e\x5e\x87\xb5\xc9\x25\x2b\x66\xb3\x70\xc0\x71\xb2\x4a\x26\x91\x0a\x05\x5d\x0d\xb1\x59\xd3\xcc\x1b\x11\x9e\x97\x15\x53\x45\x93\x9c\xa8\x70\x26\x99\xc6\x5a\x24\xf0\x79\x34\x91\x39\x95\x3e\x91\x19\x4f\xff\x2e\x9e\xfa\xe2\x37\xb2\x62\x86\x5a\x17\x2b\x5b\x90\x88\x26\xbb\x77\x8d\x0d\x29\x9a\x61\x62\x24\xa5\xa7\xc0\xaf\xab\x2b\x6f\xd3\x97\xdc\xb4\xa4\xe8\xc0\xe5\xc1\xb9\x11\xef\xbe\xeb\x85\xc8\x7a\x57\x11\x84\x4f\x20\xe0\x2d\xd9\x0e\xed\xf7\x44\x77\x65\x84\x4f\xe0\x5c\xfe\xa2\x74\xce\x25\xa9\x06\x70\x48\x6d\xea\x1c\x4a\x8f\x8c\xa6\xff\xf0\xa9\xd0\x76\x81\xe4\x75\x32\xe3\x60\x04\x0c\xa5\x53\x4d\x62\x77\xbf\x5c\x86\xb1\x89\x64\xec\xc4\xfe\x0c\xe1\x70\x38\x99\x8e\x4d\x0c\xc7\x05\xa2\x81\x4c\x00\x6b\x17\x18\x26\x24\x13\x4e\x44\x62\x16\x7b\x9d\xe1\x5b\x3a\x5f\x1e\x99\x59\xa3\xb3\xf5\xdc\x0c\xc9\x84\xcf\x4f\xcb\x7c\x8e\x48\x3c\xc3\x18\x26\x92\x5b\x48\xc4\x81\x0b\x50\xde\xd2\xbd\x6c\xfe\xb5\x0b\x7d\xad\xfe\xc3\x79\x95\x5c\x62\x18\x91\x48\x38\xe3\x08\x79\x0a\x5c\x65\x91\x8e\x16\x3c\x63\x62\x4d\x32\x22\xd0\x76\xd3\x63\xf3\xf5\x72\xb3\x35\x08\xe4\x88\x04\x12\xb9\xa8\xa9\x04\x49\x3e\x4a\x46\x60\x85\xf6\x07\x32\x51\x91\x26\x8b\x0a\xa7\x2a\x9a\x09\x7a\x41\x03\xe8\x50\x59\x9f\x58\x0e\x4d\x63\x70\x98\x0e\x50\xe5\xfa\x79\x90\x7c\x3b\x8e\x83\xe4\x39\x1d\x89\x18\x38\x23\x4b\xf4\x03\x95\x39\x6c\xee\x99\x5e\x68\x43\x7f\xeb\xa6\x46\x20\xe8\xa2\x7f\x62\x24\x3e\x9c\x48\xc5\x33\x63\xe9\x89\xd1\x68\x1c\x04\x01\xd8\x8b\x78\xd2\xed\xb4\x40\x0b\xba\xe0\x1d\x01\xd8\x30\x1b\x64\x18\xb7\x2a\x7b\x12\xdf\xa9\xd9\x3e\x99\x47\xba\xa9\x4c\x21\xd1\x34\x0e\xeb\x11\xfe\x3d\x27\xc5\x85\x19\x0e\xe5\xa4\x8f\x3e\xf8\x8f\xab\x76\x28\x3e\x79\x6c\x6d\xc4\xf0\x9d\x21\x5d\x17\xfa\xce\x75\xc1\x92\x7e\xfe\x8f\x1a\x2f\x07\xcf\x39\xc8\x43\x74\x17\xbb\x14\x0d\x02\x9f\x23\x5d\x3f\xf3\xde\xd9\x2f\x8e\x81\x44\x9a\x99\xc6\x2a\x46\x06\x06\x13\xc9\x86\xd0\xda\x68\x28\x87\x85\x80\x98\x93\x1c\x3e\x0d\xfb\x0c\x7a\x77\x38\xdb\x35\xe6\xff\xb2\x56\x8e\xdf\xef\x08\xa0\x15\x54\xd5\xbf\x67\x9d\xaa\xf5\x80\xf3\xbe\x6d\x3d\xb2\x17\xb7\x1b\xcb\xab\x74\xae\x64\x3d\xba\x4a\xab\x3b\xfd\x50\x2f\xbf\xa4\xab\x9b\x8d\xf5\x57\xf6\x83\xad\x5a\xe5\x5b\xeb\x65\x95\xde\x5c\xa3\x1b\x57\x6a\x95\x5b\xde\x5b\x1a\x01\x8f\x68\xad\xbd\xf2\x9e\x3b\xde\xad\x37\xef\xbd\x91\xd6\xda\xf5\x7a\xf9\x1a\xff\xd6\x0c\xc0\x7b\x80\x1b\x32\xb2\x4c\x0f\xd0\xf9\x1f\x9b\x84\x6b\xf3\x74\xeb\x55\xad\xb2\x13\x61\x7a\x98\x1e\x18\x6d\x4e\x33\x27\x89\x61\x0a\xec\x61\xb3\x0d\xcb\xf4\x40\xc2\xc1\x82\x14\xca\x61\x23\x8f\x44\x2c\xb0\xce\x4d\x70\xce\x47\x88\x6e\x0e\x2b\x8e\x96\xc1\x81\xc1\x81\xfe\xc1\x81\xc1\xb0\x73\x1c\x73\xe1\x22\x46\x9c\x11\x44\x68\x43\xf4\xf4\xa0\x81\xf2\xf9\x2e\x60\xd7\x11\x49\xc4\x04\x36\x7c\xf4\xfd\x0f\x3e\xfc\xe8\xd7\x83\x1c\x9a\x14\x25\x0e\x4f\xc9\x59\x4e\x39\x3f\xad\x72\x08\x0f\x1c\x7d\x3f\xfc\xb1\x88\xc3\x1f\x7f\xc8\xba\x71\xd0\xd2\x15\x6b\x79\xbb\x5e\x7e\x61\xdd\x5f\x8c\x30\x3d\x00\x7b\x22\x83\x3e\xfa\x66\xbe\xb1\x5e\x3d\x02\x5e\xde\x6b\xd5\xaf\xe8\xce\x57\x74\x75\x9b\x3e\x2c\xf6\x03\x7d\xba\x62\x2d\x6f\x5b\x73\xf3\xf4\xda\x0f\x4e\xc6\xef\xad\x35\x56\x8b\x8d\xf9\x05\x7b\x77\xab\x1f\x1a\xd5\xfb\xf5\xad\xa7\xb4\xf8\xba\x56\xd9\x39\x74\xf6\x73\x0d\xef\x4d\xd0\x3e\xa6\xef\xec\x3a\x03\xcb\x5f\x77\x1a\xf7\x5e\x78\x93\x8b\x2b\xda\xca\x21\xf4\x35\x1e\x3e\x6a\xc9\x59\xab\x0b\xf4\xe6\x7a\x7d\x63\xd6\x5a\x79\xd1\x58\xfd\xce\x99\x8c\xfe\x56\xa6\xa5\x27\xae\xe3\xb5\xca\x37\xde\xae\x56\x7d\xf6\xf3\x91\xcd\x55\xea\xaf\x80\xcf\x9b\xb9\x4d\x7b\xf7\x3b\x6b\xf1\x19\x2d\x3d\xf1\x2c\xd0\xc7\x8f\xe9\xd2\x42\x3f\xd8\x77\xff\x5e\x7f\xb3\x64\x57\x5f\x78\x29\xb0\x4a\x4b\xb5\x7f\x3c\xf0\x69\x4a\xc4\xde\xd6\x92\x88\xed\x27\xe5\x76\x69\xc6\x9b\x9c\x7f\x86\x56\x9d\x57\xe5\x17\x80\x2c\x3f\xd5\xb5\x16\x72\x1e\xcd\xee\x60\x86\x67\xf2\x44\x37\xff\x4d\x5c\xf8\x85\xe0\xab\x93\x11\x08\xf1\x0e\x58\xf9\x0d\xbb\x3f\x08\xd1\x74\x32\x99\x18\xcf\x8c\xc6\x7f\x9b\x49\x1d\x4f\xc6\x21\x30\x94\x18\x1f\x3e\x7e\x22\x33\x31\x16\x1f\xcd\xc4\x93\xc7\x13\xc3\x10\x88\xa7\x4e\xfb\x40\x4e\xc2\x79\xac\x49\x58\x13\x95\xbd\x48\xd6\x79\x2b\xfe\xd7\x20\xe7\xee\xe2\xa9\xd3\x7b\xa8\xcd\xbd\x0b\x81\xde\xf4\xb0\xa7\x17\x9a\x03\x45\xf7\xd2\x88\xc8\x84\xbd\xe5\x03\xdf\x14\xd2\x35\x07\xbe\x7f\x29\x67\x8e\x3b\x3c\x13\x99\x4e\x23\xfe\xbf\xf3\xf1\xaf\x00\x00\x00\xff\xff\xdf\x19\xd1\x48\x54\x0e\x00\x00")

func scriptsGitlabCiOriginalYmlBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGitlabCiOriginalYml,
		"scripts/.gitlab-ci-original.yml",
	)
}

func scriptsGitlabCiOriginalYml() (*asset, error) {
	bytes, err := scriptsGitlabCiOriginalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.gitlab-ci-original.yml", size: 3668, mode: os.FileMode(420), modTime: time.Unix(1636010444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGitlabCiTemplateForMultiClusterEnvYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x6f\x6f\xda\x3e\x10\xc7\x9f\xe7\x55\x9c\x10\x3f\xf1\x5b\xb7\xc4\x2a\xab\xa6\x29\x55\x37\x55\x90\x75\x6d\xc7\x1f\x41\xe0\xc9\x36\xb5\x26\x1c\x8e\xab\xc4\x8e\x6c\x43\x87\xb2\xbc\xf7\x29\x31\xe1\x4f\xa1\xd3\x9e\x44\xb1\x3f\xdf\xfb\xda\xe7\xbb\xe3\x29\x65\xe8\x83\x42\xc6\xb5\x51\x6b\x2f\x12\xee\x0c\xf9\x13\x17\xcc\xa3\x09\x5f\x2f\x45\xa4\xbd\x48\xa6\xe4\x89\xd3\x5f\x9c\x0a\x46\x98\x9c\x2d\x79\x32\x47\xd5\xf6\x13\x6a\x50\x1b\xc7\x59\x51\xc5\xe9\x2c\x41\xed\x3b\x00\x00\x37\x83\xe1\x75\xf8\xd5\x87\x66\xe7\xf6\x61\x38\x1a\xdc\x05\x9d\xf0\xa1\x7b\x3b\x22\x1e\x93\x15\xef\x75\xbe\x4d\xc6\x61\x30\xf2\xa1\x91\xe7\xf9\x66\x51\x14\x45\xc3\xd2\xa0\x3f\xb5\x24\xe8\x4f\x77\xbb\x9d\x5e\x77\xa3\xef\x75\x77\xbb\x77\x93\xde\x30\x0c\xc6\xa1\x45\xf5\x6a\xc7\x27\xe3\xa0\x73\x33\xb0\xd4\xfe\x1f\x38\x6e\x8f\xb2\xff\x15\x73\xb4\xa1\xac\x4e\xc5\x05\x8d\x66\x99\x6d\xfe\x8d\xe2\x8c\xa1\xd2\x8e\xc3\x50\xa0\xa2\x06\x1f\x22\x29\x16\x9c\x59\x71\x15\xe8\xef\x45\xe8\x48\xf1\xcc\x58\x68\x1d\x30\x8a\x25\x34\xeb\x07\x38\x06\x41\x7f\x7a\x42\xdd\xeb\x1e\x6f\xd6\xb9\x1e\x13\x9b\xe7\x49\x9b\x43\xfb\x68\xa9\x12\x70\xdd\x18\xe9\x1c\x15\x34\x86\xa3\xdb\xe9\x75\x18\xb8\xe1\xe0\x3e\xe8\xfb\x2c\xbb\x37\xf1\xc5\x48\x3f\xcb\xf8\xe3\x2a\x7e\x1f\xeb\xee\xa4\xdd\x80\xd8\x98\x4c\xfb\x84\x30\x6e\xbc\xba\x23\xe2\xe5\x5c\x0a\x56\x35\x09\xcd\x38\x59\x5d\x90\x4c\xc9\x27\x8c\x8c\x26\x1f\xda\xe7\x44\x61\x26\x35\x37\x52\xad\xc9\x82\x27\xa8\x89\x7d\x15\xfd\x5f\xfb\x8b\xc7\xb8\x49\xe8\xcc\x8d\xb8\x6b\x30\xcd\xca\x76\xf2\xd6\x69\x42\x14\x7d\xfe\xac\x70\x71\x95\x52\x6d\x50\xc1\x27\x78\x45\xb8\x9f\x0b\x35\xff\xa4\x52\xea\xea\xff\xc7\xc3\x2a\xc0\x6f\xd0\x38\x87\x96\x26\xef\xc8\x0f\x41\x58\xeb\xf1\xcd\x25\x2c\xa4\x82\x28\x59\x96\xe7\xa7\xc0\x05\x34\xf3\x32\xf6\xfb\xd9\xcf\xe2\x12\xe6\x12\x0e\x7c\x82\xfe\xf4\x55\x0f\x14\xab\x4d\xfc\x7e\xf8\x5f\x6e\xbb\x71\xd2\xa4\x95\xe7\xe1\xf5\xcd\xb8\x28\x5a\xa4\x59\xba\x10\xb6\x8f\xb6\x53\xd3\x22\x8d\x66\x7d\xd1\xc6\xa1\xa6\xea\xe8\x92\x97\xe1\x2f\x58\x35\x45\x25\x2b\xdb\xe2\x05\xdb\x8d\x51\x25\xa8\x97\x2f\x54\xf5\x38\x55\x1a\xbb\x38\x3e\x63\x7b\x85\x4d\xf7\x95\x8a\x83\x72\x46\x32\xcd\x12\x34\xe8\x6e\x93\x70\xab\xeb\x96\x4f\x51\x3e\x95\x40\xfb\xdd\x2b\xa2\xa1\x3c\x01\x57\xc0\xdb\x73\xf0\xc8\x29\xab\xb3\x6d\xd5\xa9\x32\x7c\x41\x23\xa3\x77\x33\x98\x51\x13\x6b\xdf\xc9\xf3\x7c\x0b\x8b\xa2\x70\xfe\x04\x00\x00\xff\xff\x53\xd0\x0c\x73\x07\x05\x00\x00")

func scriptsGitlabCiTemplateForMultiClusterEnvYmlBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGitlabCiTemplateForMultiClusterEnvYml,
		"scripts/.gitlab-ci-template-for-multi-cluster-env.yml",
	)
}

func scriptsGitlabCiTemplateForMultiClusterEnvYml() (*asset, error) {
	bytes, err := scriptsGitlabCiTemplateForMultiClusterEnvYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.gitlab-ci-template-for-multi-cluster-env.yml", size: 1287, mode: os.FileMode(420), modTime: time.Unix(1638936795, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGitlabCiTemplateBackupYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x7b\x53\x13\x57\x14\xff\x7f\x3f\xc5\x71\x09\x06\x2d\x9b\x25\xbe\x8a\x61\xd6\x29\x24\x5b\x8c\x25\x09\x03\x81\xd6\xb1\x1a\x2e\xbb\x97\xcd\xca\x66\x6f\x66\x77\xa3\x38\xc8\x0c\x8a\x60\x6b\xcb\xa3\x55\xaa\x83\xa8\x50\x9f\x6d\xa7\x40\x1d\xaa\x48\x4a\xfd\x32\xd9\x3c\xbe\x45\x67\x77\xf3\xd8\xd4\x00\xd6\x4e\x67\x9a\x3f\x98\xbb\xe7\x7d\xcf\xf9\xdd\xdf\xbd\xc8\x29\x24\xe1\x00\x68\x58\x92\x75\x43\xbb\xe2\x13\x54\x66\x18\xcb\x17\x65\x55\xf2\x21\x45\xbe\x92\x51\x05\xdd\x27\x90\x14\x7b\x51\x46\x63\x32\x52\x25\x56\x22\xc3\x19\x59\x11\xb1\x76\x24\xa0\x20\x03\xeb\x06\x45\x5d\x42\x9a\x8c\x86\x15\xac\x07\x28\x00\x80\xee\x58\x6f\x67\xfc\x74\x00\x3c\xc1\x70\xa2\xb7\x2f\x76\x86\x0f\xc6\x13\xa1\x70\x1f\xeb\x93\x88\xad\x1f\x0c\xf6\x0c\xf4\xc7\xf9\xbe\x00\xd0\xe3\xe3\xe5\xf5\xc4\x04\xed\xe8\xf8\xe8\xa0\x2d\xe7\xa3\x83\x55\x59\x30\x12\x72\x6c\x23\xa1\xaa\xec\xcc\x40\xa4\x37\xce\xf7\xc7\x6d\x45\xe5\xa3\xaa\x1d\xe8\xe7\x83\xdd\x31\x5b\xe7\x2c\x2d\x0d\x35\x8c\x47\x88\x86\x13\xba\xa0\xc9\x69\xc3\xa9\x95\x01\x11\x19\x18\xbc\x1f\x35\x9f\x65\x9a\x53\x4c\xb3\x08\xcd\xa7\x03\xcd\x91\x40\x73\xbf\xaf\x39\xea\x2d\x9b\xc8\x23\x70\x0e\x3c\x56\x19\xc0\x01\x8d\x14\x85\x86\xf3\x1d\x60\x24\xb1\x6a\xd7\xc6\x79\x5a\x14\x1d\x84\x94\x08\x57\x41\xd2\x70\x1a\x98\x4b\xc0\x56\xd6\xde\x0b\xe7\x2e\x24\xce\x7b\xe1\x2a\x8c\x21\x4d\xd2\x01\x0b\x49\x02\x57\x41\xc7\x22\x78\x75\x16\xd8\x56\x56\xf2\x1e\xea\x80\x11\xb9\xa3\x9c\xac\x1c\xd1\xb6\x73\x72\xba\xac\x2d\xe3\xb2\x9d\x24\x1b\x20\x10\x75\x44\x96\x80\x61\x24\x85\x0c\x23\x05\x32\x9a\xe2\xa3\x93\x86\x91\xd6\x03\x2c\x2b\xc9\x86\x82\x86\x19\x41\x66\x0c\x32\x8a\xd5\x80\x67\x3c\x18\x4e\x9c\x89\x75\x25\xe2\xb1\xcf\xf8\xe8\xc4\x27\x92\x6c\xf8\x2a\x53\x4d\x66\x44\xa2\x4a\xf6\xa0\x69\x9f\xac\xea\x06\x46\x62\x6c\x04\xdc\xb1\x1a\xda\x96\x6b\x49\x8d\x8a\xb2\x06\x4c\x1a\x7c\x12\x81\x83\x07\x9d\x4d\xd2\x0e\x0e\x80\x3b\x05\x1e\x67\x49\xd7\x74\x9f\x13\xcd\xf6\xe1\x4e\xc1\x50\xfa\xb2\x38\x64\xab\x14\x1d\x18\xa4\x54\xf6\x47\x00\xab\x97\x80\xb9\x6c\xe1\xa9\x2f\xf6\xc5\x59\xae\x5a\x0c\x49\x6b\x64\xcc\x82\x6a\x03\xd3\x68\xd9\xb8\x71\xc5\x0d\x1d\xfa\x07\x22\xa1\xae\xf7\x77\xf0\xfb\xfd\x91\x58\x68\xa0\x87\xe7\x88\xea\x06\x08\xed\x29\xc3\x8e\xb6\x50\xe2\xaf\x61\xa4\xe6\x1c\xec\x8e\x25\xf8\x68\x67\x57\x0f\x1f\xe2\xfc\x1d\x80\x15\x1d\xef\xa2\x6d\xb3\x20\x51\x97\x9c\xa2\x7c\x12\x61\x04\x24\x24\xb1\x03\x5d\xd7\xd2\xfa\xa5\x91\x91\xd4\x6b\x9f\x8e\xab\x4f\x22\x6c\x7a\x54\x62\x53\x44\x64\x29\x4a\x37\x90\x54\x39\xa4\x0c\xd8\x67\xd7\x59\xda\x27\xda\xbd\xb6\x59\xa1\x72\x40\x70\x5a\x21\x57\x28\x4a\x20\x22\x4e\x58\x4e\x4e\x00\x3b\x58\xa0\x16\x05\x8f\x19\x58\x15\xf5\x00\x54\xcb\x74\xcc\x5c\x87\xad\xba\x9d\x14\x11\x41\x24\x97\x55\x85\x20\xd1\xa5\x49\x70\x34\x57\xfd\x81\x44\x14\xa4\x4a\x82\xcc\x28\xb2\x6a\x80\x96\x51\x01\x6a\x5a\xda\xe5\x96\x42\xa3\x18\x2c\xa3\x3d\x42\xd9\x75\xee\xe5\x5f\xdd\xc7\x5e\xfe\x8c\x86\x04\x0c\x8c\x9e\x24\xda\x9e\xc1\x2c\x33\x5b\x66\x20\x49\x77\xef\x7d\x7c\x3c\xde\xd9\xdd\x3f\x31\x61\x8b\xb4\x4c\x95\x32\x2b\x30\x0a\x80\xd7\x53\xa5\x36\x38\x60\xe3\xc8\x4b\x51\xf6\x4c\xea\xda\x5e\x9b\xd8\x2e\x7d\x47\x9a\x21\x8f\x20\xc1\xd0\xf7\x43\x08\x7b\xd8\x6a\x70\x66\x8c\x41\x29\xf1\xc4\xb1\x7f\x3c\xb3\x7d\xe9\xd3\x31\xab\xd0\x99\xc3\xf6\xef\x2a\xf8\xe8\x60\x03\xeb\x48\xe8\x5d\xa1\x73\xc6\x5c\x72\xa4\x69\x5c\xcb\x50\x23\xbe\x6c\x65\xbf\x54\x59\xc9\x3b\x64\xf1\x2b\xd1\x6c\x86\x96\x55\xf0\x8c\x23\x4d\x3b\x77\xf8\xfc\x44\x07\x88\xa4\x3c\x2f\xac\x60\xa4\x63\x7b\x5c\x9c\xfb\x52\x82\xca\x45\x04\x2a\x4a\x61\xce\x23\xa4\x44\xcb\x4b\xc5\xae\xfc\x0e\x6b\x25\x1b\x76\xf2\x83\xe6\x6f\xed\xe1\x00\x07\x6a\x46\x51\x2c\x56\xac\x0a\x68\x0b\x0a\x4d\x50\x7c\x76\xcd\x5c\x7b\x58\x98\xdb\x28\x2d\x2e\x9b\x53\xf3\xf9\x87\x37\xcc\xec\x76\x2b\x14\xd7\x5f\x9b\xcb\x2f\x4a\xab\x6f\x0a\xf7\xd7\x72\x5b\xbf\xe6\x5f\x67\xcd\x5b\x2b\xe6\xb3\xeb\xb9\xad\x6f\xf2\x3f\xdc\xcc\x65\x5f\x05\xc0\x51\xe6\x57\xac\xbf\xe6\xce\x22\x6b\x83\x88\x2d\xcc\xad\x9b\x3f\x4e\xe5\x57\x6e\x16\xd7\x67\xd8\xfc\xd7\xcf\x8b\xab\xdf\x3a\x0e\xe6\xc2\x2c\xeb\xdc\x30\x3e\x3d\x49\x35\x81\x39\xfd\xaa\xac\x98\x99\x36\xd7\xde\xe4\xb6\xb6\x03\x54\x13\xd5\x04\x7d\xe5\xb7\xc3\x69\xa2\x1b\x1c\xbd\xdf\x4b\x82\xa6\x9a\x20\x6c\xd1\x4b\x14\xa5\xb0\x9e\x46\x02\xe6\x68\xeb\x70\x59\xf2\x5e\xa2\x19\x3d\xb2\x15\xa5\xbd\xad\xbd\xad\xb5\xbd\xad\xdd\x6f\x89\x43\x36\x03\x85\x48\x0a\xc9\x2a\x57\xbd\x93\x46\xdb\x75\x94\x4e\x37\xe0\xec\x9a\x4b\x38\xc4\xd1\xfe\x23\x47\x8f\x1d\x3f\xf1\x71\x3b\x83\x86\x05\x91\xc1\x23\x52\x92\x91\x2f\x8e\x2a\x0c\xc2\x6d\x47\x8e\xfa\x4f\x0a\xd8\x7f\xf2\x38\x6d\xef\xc3\x9c\xbf\x9e\x5f\xdc\x28\xae\x6f\xe6\xef\xcd\x05\xa8\x26\x80\xba\x9d\x41\x8b\xf9\x76\xba\xb4\x9a\x3d\x04\x4e\xdf\x73\xd9\xdb\xe6\xf6\x6d\x73\x79\xc3\x7c\x30\xd9\x0a\xe6\x93\xa5\xfc\xe2\x46\x7e\x6a\xda\x9c\xf9\xdd\xea\xf8\xdd\x95\xd2\xf2\x64\x69\x7a\xb6\xb0\xb3\xd6\x0a\xa5\xec\xbd\xe2\xda\x13\x73\xf2\x8f\xdc\xd6\xf6\xbe\x2f\x2d\x3b\x71\x7d\x83\x76\x49\xfd\xdd\x8e\xb9\x30\x5b\xf8\x69\xbb\x74\x77\xd3\x5a\x3c\xdf\xb0\x5d\x2b\x3d\x84\x96\xd2\x83\x87\x15\xbf\xfc\xf2\xac\x79\x6b\xb5\xf8\xec\x5a\x7e\x69\xb3\xb4\xfc\xb2\xb0\x74\xa3\xf0\xcb\xba\x39\xff\xd8\x2e\x3c\xb7\xf5\xb3\xf3\x95\xcb\x3e\x35\x67\x6f\x15\x9f\x7f\x5f\x9a\xbc\x6b\xce\xbf\x36\xbf\x9a\x29\x2d\xdd\xb1\x83\xba\x27\xe0\xaa\x66\xea\x45\x61\xe7\x65\x7e\xee\xa9\x39\xff\xd8\xc9\x60\x3e\x7a\x64\x2e\xcc\xb6\x42\xe1\xce\x6f\xc5\xb7\x0b\x85\xec\xa6\xd3\x82\xfc\xfc\x42\xee\xcf\xfb\xae\x48\xe1\xd0\xdf\xa3\x84\x43\xbb\x79\xd9\x28\x4d\x38\xef\xd4\x77\x28\xb0\x76\x51\xfd\x07\x3c\xe8\xd6\xda\xd9\x7c\xd6\x3d\xdc\x98\x21\xf1\x58\x9a\x68\xc6\x7b\xd2\xc2\x1e\x2c\xf7\xef\xd8\xac\xd6\x13\xf0\xb1\x16\x5b\xb9\x53\xdb\x0f\xf2\x60\x2c\x12\x09\xc7\x13\x7d\xfc\xa7\x89\x68\x67\x84\x07\x4f\x77\x38\xde\xd3\xd9\x95\x18\xe8\xe7\xfb\x12\x7c\xa4\x33\xdc\x53\xa3\x69\x87\x97\x5d\x84\x27\xe2\x34\x56\x45\xac\x0a\x72\x3d\x71\xd5\x6e\xa3\x0f\x23\xbc\x72\xba\x7a\xd2\xab\x09\x69\xda\x11\xf1\xd1\xc1\x7a\x9b\xb2\xa0\xa2\xdf\x93\x38\x9d\x67\x4c\x1d\x82\xca\x2f\x9b\xc6\x03\x15\x90\x01\xf5\x43\x07\xd7\x73\xa8\x61\xdf\x5c\xff\xef\x58\xcf\xdd\xfd\x5b\x96\xa8\xc1\xf7\x7f\xdb\xb8\xbf\x02\x00\x00\xff\xff\xbd\x28\x52\x82\x21\x0e\x00\x00")

func scriptsGitlabCiTemplateBackupYmlBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGitlabCiTemplateBackupYml,
		"scripts/.gitlab-ci-template.backup.yml",
	)
}

func scriptsGitlabCiTemplateBackupYml() (*asset, error) {
	bytes, err := scriptsGitlabCiTemplateBackupYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.gitlab-ci-template.backup.yml", size: 3617, mode: os.FileMode(420), modTime: time.Unix(1638233134, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGitlabCiTemplateYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x7b\x53\xdb\xd8\x15\xff\x5f\x9f\xe2\x44\x98\x98\xa4\x48\xc2\x79\x95\x98\x51\xa6\x60\xbb\xc4\x29\xb6\x19\x30\xb4\x99\x34\x11\xd7\xd2\x45\x56\x90\x75\x3d\x92\x4c\x60\x08\x33\x24\x04\xd2\xa6\xe5\xd1\x26\x34\x19\x42\x12\x68\x9e\x6d\xa7\xc0\x66\xd8\x84\xe0\x65\xf3\x65\x2c\x3f\xbe\xc5\x8e\x24\x3f\x83\x09\x49\x76\x57\x7f\x78\xae\xce\xf9\x9d\xc7\x3d\x3e\xf7\x77\x8f\x94\x14\x92\xb1\x1f\x74\x2c\x2b\x86\xa9\x4f\xb2\xa2\xc6\x24\xb0\x72\x5d\xd1\x64\x16\xa9\xca\x64\x46\x13\x0d\x56\x24\x29\xee\xba\x82\x26\x14\xa4\xc9\x9c\x4c\x12\x19\x45\x95\xb0\x7e\xca\xaf\x22\x13\x1b\x26\x45\x8d\x23\x5d\x41\x09\x15\x1b\x7e\x0a\x00\xa0\x37\xd6\xdf\x1d\xbf\xe8\x07\x4f\x20\x2c\xf4\x0f\xc4\x2e\x85\x02\x71\x21\x18\x1e\xe0\x58\x99\x38\xfa\xe1\x40\xdf\xd0\x60\x3c\x34\xe0\x07\x7a\x6a\xaa\xbc\x9e\x9e\xa6\x5d\x5d\x28\x3a\xec\xc8\x43\xd1\xe1\xaa\x2c\x10\x09\xba\xd8\x48\xb0\x2a\xbb\x34\x14\xe9\x8f\x87\x06\xe3\x8e\xa2\xf2\x52\xd5\x0e\x0d\x86\x02\xbd\x31\x47\xe7\x2e\xeb\x7d\x55\x42\xb8\x4b\x5b\x43\x25\xf0\x28\xd1\xb1\x60\x88\xba\x92\x36\xdd\x5d\x30\x20\xf0\x34\xdd\x74\xc9\xdb\xcf\x05\x70\x8d\xc0\x35\x62\x59\xb6\x39\xb8\xb2\x94\x90\x89\xc1\xfb\x9b\xd6\xcb\x4c\x6b\x8a\x69\x95\xa0\xf5\xa2\xbf\x35\xe2\x6f\x1d\x64\x5b\xa3\xde\x32\x44\x19\x85\x2b\xe0\xb1\x53\x04\x1e\x68\xa4\xaa\x34\x5c\xed\x02\x33\x89\x35\x27\x6f\xde\xd3\xa6\x1a\x20\xa6\x24\xb8\x09\xb2\x8e\xd3\xc0\x8c\x03\x57\x59\x7b\xaf\x5d\xb9\x26\x5c\xf5\xc2\x4d\x98\x40\xba\x6c\x00\x16\x93\x04\x6e\x82\x81\x25\xf0\x1a\x1c\x70\xed\x9c\xec\x3d\xd1\x05\xa3\x4a\x57\x39\x58\xd9\xa3\x83\x73\x63\xd6\xa1\x6d\x70\x19\x27\x2b\x26\x88\x44\x1b\x55\x64\x60\x18\x59\x25\x09\xa4\x42\x46\x57\x59\x3a\x69\x9a\x69\xc3\xcf\x71\xb2\x62\xaa\x28\xc1\x88\x0a\x63\x92\x31\xac\xf9\x3d\x53\x81\xb0\x70\x29\xd6\x23\xc4\x63\x7f\x08\x45\xa7\x7f\x27\x2b\x26\x5b\xe9\x9e\x64\x46\x22\x9a\xec\x34\x14\xcd\x2a\x9a\x61\x62\x24\xc5\x46\xa1\xde\x57\x53\x6c\x39\x97\xd4\x98\xa4\xe8\xc0\xa4\x81\x95\x09\x1c\x3f\xee\x6e\x92\x76\xfb\x0d\xf8\x0b\xe0\x71\x97\x74\x4d\xf7\x47\xa2\x3b\x36\xfc\x05\x18\x49\xdf\x90\x46\x1c\x95\x6a\x00\x83\xd4\xca\xfe\x08\x60\x6d\x1c\x98\x1b\x76\xdf\x0e\xc4\xfe\x74\x99\xaf\x26\x43\xd2\x3a\x99\xb0\x8f\x44\x13\x68\xb4\x0c\x6e\x9e\x71\x53\x83\xc1\xa1\x48\xb0\xe7\xcb\x0d\x7c\x3e\x5f\x24\x16\x1c\xea\x0b\xf1\x44\xab\x6f\x10\xda\x53\x6e\x6f\xda\xee\x12\x5f\xad\x47\x6a\xc6\x81\xde\x98\x10\x8a\x76\xf7\xf4\x85\x82\xbc\xaf\x0b\xb0\x6a\xe0\x43\xb4\x1d\x76\x4b\x34\x04\xa7\x28\x56\x26\x8c\x88\xc4\x24\x76\x0f\x42\xdd\xd2\x7e\xd2\xc8\x4c\x1a\xb5\x57\xd7\x94\x95\x09\x97\x1e\x93\xb9\x14\x91\x38\x8a\x32\x4c\x24\x57\xc8\x80\x01\x91\x48\x58\x40\x1a\x52\x27\x0d\xc5\x28\xcb\x1c\x0a\x11\x90\x26\x09\x12\x4e\xab\x64\x92\xa2\x1a\x50\xae\xa9\xe3\xc6\xdf\xc4\x1e\x4f\x98\x58\x93\x0c\x3f\x54\x33\x75\xf1\x75\xa7\xf7\x93\xe3\x77\xd8\x6b\xf9\x24\xdb\x21\xa0\x12\xa2\x7a\x92\xbf\xc4\x87\x4c\x20\x45\x24\x90\xc8\x0d\x4d\x25\x48\x6a\xe2\xdd\x79\x40\x26\x2a\xd2\x64\x51\x61\x54\x45\x33\x41\xcf\x68\x00\x35\x6d\xbd\xc3\x14\x1a\xc3\x60\x83\x3e\xe3\x0a\x6c\xda\xfd\x9c\xbd\x43\xcb\x47\xd9\x33\x3a\x12\x31\x30\x46\x92\xe8\x9f\x75\x66\xc3\x1c\x99\x89\x64\xa3\xbe\xba\x53\x53\xf1\xee\xde\xc1\xe9\x69\x47\xa4\x67\xaa\xfc\x5f\xe9\x55\x3f\x78\x3d\x55\x9e\x86\x63\x4e\xb3\x7a\x29\xaa\x05\x8a\xaf\x6e\x59\x9b\x4f\x0b\x8b\xdb\xa5\x95\x35\x6b\x76\x29\xff\xf4\x8e\x95\xdd\x6b\x87\xe2\xd6\x7b\x6b\xed\x4d\x69\xe3\x43\xe1\xf1\x66\x6e\xf7\xff\xf9\xf7\x59\xeb\xde\xba\xf5\xea\x76\x6e\xf7\x6f\xf9\x7f\xdd\xcd\x65\xdf\xf9\xc1\x55\xe6\xd7\xed\x5f\x6b\x7f\x85\x73\xfa\x88\x2b\x2c\x6e\x59\xff\x9e\xcd\xaf\xdf\x2d\x6e\xcd\x73\xf9\xbf\xbe\x2e\x6e\xfc\xdd\x35\xb0\x96\x17\x38\x97\xbb\x58\x23\x49\xb5\x80\x35\xf7\xae\xac\x98\x9f\xb3\x36\x3f\xe4\x76\xf7\xfc\x54\x0b\xd5\x02\x03\xe5\xdb\xef\x22\x31\x4c\x9e\x3e\xea\x2e\xa4\xa9\x16\x08\xdb\xd7\x66\x14\xa5\xb0\x91\x46\x22\xe6\x69\xbb\xa2\xb6\xbc\x9f\xe8\x66\x9f\x62\x7b\xe9\xec\xe8\xec\x68\xef\xec\xe8\xf4\xd9\xe2\xa0\xd3\xe5\x41\x92\x42\x8a\xc6\x57\xd9\x6e\xac\xd3\x40\xe9\x74\x13\x36\xa8\x99\x84\x83\x3c\xed\x3b\x75\xfa\xcc\xd9\x73\xbf\xed\x64\x50\x42\x94\x18\x3c\x2a\x27\x19\xe5\xfa\x98\xca\x20\xdc\x71\xea\xb4\xef\xbc\x88\x7d\xe7\xcf\xd2\xce\x3e\xac\xa5\xdb\xf9\x95\xed\xe2\xd6\x4e\xfe\xd1\xa2\x9f\x6a\x01\x68\xd8\x19\xb4\x59\x1f\xe7\x4a\x1b\xd9\x13\xe0\xd6\x3d\x97\xbd\x6f\xed\xdd\xb7\xd6\xb6\xad\x27\x33\xed\x60\xbd\x58\xcd\xaf\x6c\xe7\x67\xe7\xac\xf9\xef\xed\x8a\x3f\x5c\x2f\xad\xcd\x94\xe6\x16\x0a\xfb\x9b\xed\x50\xca\x3e\x2a\x6e\xbe\xb0\x66\x7e\xc8\xed\xee\x1d\x39\x2b\x38\x81\x1b\x0b\x74\x48\xe8\x7f\xec\x5b\xcb\x0b\x85\xff\xec\x95\x1e\xee\xd8\x8b\xd7\xdb\x8e\x69\xa5\x86\xd0\x56\x7a\xf2\xb4\x62\x97\x5f\x5b\xb0\xee\x6d\x14\x5f\xdd\xca\xaf\xee\x94\xd6\xde\x16\x56\xef\x14\xfe\xb7\x65\x2d\x3d\x77\x12\xcf\xed\xfe\xd7\x7d\xcb\x65\x5f\x5a\x0b\xf7\x8a\xaf\xff\x59\x9a\x79\x68\x2d\xbd\xb7\xfe\x32\x5f\x5a\x7d\xe0\x38\xad\xff\x07\xea\xb2\x99\x7d\x53\xd8\x7f\x9b\x5f\x7c\x69\x2d\x3d\x77\x23\x58\xcf\x9e\x59\xcb\x0b\xed\x50\x78\xf0\x5d\xf1\xe3\x72\x21\xbb\xe3\x96\x20\xbf\xb4\x9c\xfb\xf1\x71\x9d\xa7\x70\xf0\x53\x2f\xe1\xe0\x61\x56\x9f\xb2\x5d\x03\xbd\x1d\xa0\xc2\x5f\x85\xe1\xb0\x36\xae\xe8\x44\x4b\x61\xcd\xfc\x2a\x7e\x3b\x72\x6a\x71\x61\x95\x29\xc2\x1d\xe6\x0e\x2a\x42\xd1\xe1\x26\xe8\x48\xf0\xa0\xd0\xbd\xda\x9a\x82\x1b\x9d\xd8\x73\x49\x42\x47\x9a\x98\xfc\x86\x72\x38\x45\xff\x85\x88\x1e\xe9\x3a\xdf\x36\xd2\x6c\x8e\x6a\xe7\xfe\xac\x71\xb2\x77\xc4\x9e\xbb\x88\xee\x4c\x6e\x8a\x06\x9e\x29\xa4\xeb\x57\x4e\x5e\x9d\xee\x02\x89\x94\x29\x16\xab\x18\x19\xd8\x61\x58\xbe\x7e\x28\x86\xca\x20\x0c\x1a\x4a\x61\xde\x23\xa6\x24\xdb\x4a\xc3\x75\xf1\xdd\x69\x26\x09\x2c\x77\xd2\xbe\x5d\x32\x13\x0c\x4a\x49\xe7\xce\x7c\x6b\x55\x04\xe7\x8b\xe0\xab\x6a\xf3\xf3\x2a\xe0\x44\x75\x82\x02\xcb\xd9\x3b\xac\xdf\x85\xf3\x11\x11\x88\x45\x22\xe1\xb8\x30\x10\xfa\xbd\x10\xed\x8e\x84\xc0\xd3\x1b\x8e\xf7\x75\xf7\x08\x43\x83\xa1\x01\x21\x14\xe9\x0e\xf7\xd5\x7a\xcf\x6d\xb6\x6a\xc3\x1c\xa8\xd6\x97\xd6\xc2\x3d\x8c\x5f\x55\x06\x11\x99\xe5\xc6\xb2\xc7\xa8\x9a\xdc\x75\xd5\x34\xeb\xba\x2f\x24\x7b\x70\xfd\xf6\x6b\xb6\xb2\xfb\x63\x3c\x68\x19\x55\xb5\xa7\xdc\x06\x21\x4d\xbb\x22\xbb\x36\x0d\x98\xb2\xa0\xa2\xb7\xff\xbd\x46\x1f\xae\x80\xa6\xbd\xd4\x4f\x01\x00\x00\xff\xff\x41\x3b\x80\xcb\x2b\x0e\x00\x00")

func scriptsGitlabCiTemplateYmlBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGitlabCiTemplateYml,
		"scripts/.gitlab-ci-template.yml",
	)
}

func scriptsGitlabCiTemplateYml() (*asset, error) {
	bytes, err := scriptsGitlabCiTemplateYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.gitlab-ci-template.yml", size: 3627, mode: os.FileMode(420), modTime: time.Unix(1638941054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGitlabCiYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xdb\x52\xdb\x56\x17\xbe\xd7\x53\xec\x31\xf9\x07\x32\x3f\xb6\x80\x1c\x4a\x34\x43\x3b\x1d\xec\xa6\x6e\xc2\x61\x38\xdd\x32\xb2\xbc\x2d\x6f\x22\x4b\x1a\x49\x26\x61\xa6\x17\xe6\x5c\x02\x46\x4e\x02\x84\x38\x4e\x02\x85\x10\xda\x26\x36\x49\x48\x70\x6c\x08\x0f\x13\x6d\x1d\xae\xf2\x0a\x1d\x79\xdb\xc6\x80\x63\x3a\xad\x2f\x3c\xda\xeb\xf0\xad\xf5\x7d\x6b\x6d\xa9\x09\xd8\x3b\x93\x38\xfb\xdc\x5a\xde\x73\x56\x33\x78\x5a\x37\x9f\xcf\xe0\x62\xa1\x15\xd8\xb9\x03\x9c\xd9\x75\x36\x3f\x59\x4f\xb3\x46\xfe\x8d\x79\x50\xc4\xf7\x37\xf0\xce\x94\x91\x5f\x34\xd7\xe6\x8d\xe2\x47\x06\x10\xa7\xb9\xe1\xfe\xe3\xa3\x55\x3a\x14\x47\x42\x98\xb6\x96\x73\xf8\xf7\x69\x73\x63\xde\xce\xcd\xd1\xe6\xc2\x2b\x7b\x73\x89\x24\xe0\x54\x92\xe6\x24\x31\x82\x78\x9f\x1a\xa5\x9a\x00\x9e\xfd\x58\x76\xcc\xcd\xe2\xec\x27\x23\x5f\x60\xa8\x26\xaa\x09\x0c\x40\x1e\xa9\x9a\x32\xf1\xb3\xa4\x6a\x5d\x1e\xa5\x7c\xf2\x71\xa2\x37\x04\xd1\x18\x12\x79\x1f\x2b\xa0\x89\xb8\xc8\xa9\x3e\x4e\x8a\x79\xa8\x26\x10\x8c\xb1\x3c\xec\x65\x63\x50\x95\x59\x0e\x76\x79\x34\xa8\x6a\xae\xbd\x5f\x52\xb4\xdb\xc8\x45\xe9\x6c\xeb\x6c\x6b\xed\x6c\xeb\x6c\x77\xcd\x7e\x28\x0b\xd2\x84\x5f\x8a\xb1\x48\xec\xf2\x44\x35\x4d\x56\x19\x9a\xbe\xd3\xa9\xb2\xb2\xec\x1b\x43\xec\x3d\xc4\x8a\x7c\x34\x1e\x96\x44\xbe\x52\x81\xa4\x04\xfd\x5d\x9e\xf6\x8e\x2b\x57\xaf\x5d\xff\xae\xd3\xcb\x86\xb8\xb0\x17\x46\xf8\xa8\x17\x8d\xdd\x11\xbc\x2c\x6c\xeb\xb8\xd2\x7e\x83\x83\xed\x37\xae\x79\x4a\x3c\xb0\x3e\x65\xae\xee\xd9\xb9\x7d\x73\x7d\x99\xa1\x9a\x00\x38\xc5\x0c\xb4\xe0\xe3\x59\x67\xb3\x78\x19\x10\xdd\x8d\xe2\x23\x5c\x78\x84\x33\x7b\xf8\x59\xa2\x15\xe0\xed\xb4\xb9\xba\x67\x4e\xcf\xe2\xb9\x0f\xae\xe2\x8f\x37\x9c\x4c\xc2\x99\x4d\x5a\x47\xd9\x56\xe0\x14\xd7\xed\xec\x36\x4e\x1c\x1a\xf9\x02\xb8\x48\x9f\x52\xe1\xd3\x02\x7d\xa3\xf4\x83\x23\x9c\x4a\x5a\x7f\x14\x9c\xc7\xfb\xee\xc3\xab\xbd\x52\x6a\x45\x43\xd0\xe2\x3c\x7b\x5e\xc9\x33\x33\x49\x7c\x7f\xd3\xde\x99\x34\xd3\xfb\x4e\xe6\x9d\x95\x9e\xb1\xfe\xca\x61\x7d\xab\xd4\xb8\x91\xff\x93\x9c\x8c\xe2\x4b\x9c\xbc\x6f\xbf\x7a\xe8\x24\x1e\x63\xfd\x00\xff\x36\xe7\xa4\x57\x4a\xa0\xb5\x13\xa8\xe9\x66\x7a\xd7\x3a\x7a\x67\x2e\xbf\xc4\xfa\x16\xa9\x80\x5f\xbc\xc0\xa9\x64\x2b\xb0\x56\xde\xda\xc7\x29\xab\xb8\x4f\x24\x30\xf5\x94\xf1\xf9\x69\x0d\x52\xd0\x7f\x16\x25\xe8\xaf\x97\x45\x51\xc8\x55\x82\xb9\x50\x35\xba\xb2\x06\x34\x2f\x95\xd6\x1a\x2a\x1d\x8c\xc0\xba\x8b\x45\x51\xe3\xac\x82\xd8\x90\x00\x55\x86\x02\x00\x80\xee\xdb\xc3\x83\x43\x81\x01\x72\x70\x7f\x61\xa8\x72\x0a\x92\x35\x24\x89\x0c\xf0\xb8\xf7\x4b\x7f\x80\xf3\xd3\x56\x7a\xc6\x79\x3a\x67\x7d\xde\xfe\x7a\xb8\x84\x93\xef\x41\x09\x17\x18\xf9\x65\x40\x6e\x85\x0a\x8c\xfc\xa2\xb3\xb3\x86\xdf\x4e\xe1\x37\x29\x72\xa7\xc8\x20\xbe\x24\xa6\x5a\x88\xb0\x04\xc0\x38\x3a\xb6\x56\x76\xcf\x6b\xfb\xf5\x70\xc9\xc8\x27\xcd\x95\x9c\xb9\x34\x49\x62\x00\x2b\x08\x80\x94\x37\x17\x12\x66\x66\x81\x00\x5c\xf6\x54\x9b\x1d\x67\x85\x38\x64\x80\x27\x0c\x23\x6c\x5c\xd0\x88\x23\xd0\x3b\xf2\x4f\xe8\x90\xab\xde\x88\x8e\xf5\xfa\xb5\x51\x58\x6a\xc4\x88\x60\xfc\x07\x46\x04\xa0\x0e\x23\x62\xe9\xee\xf1\x37\xa0\x62\x1d\xae\xd9\xb9\x07\x56\x7a\x06\xeb\xb9\x33\xef\xaa\x32\x2d\x2e\xe6\x92\x5a\x04\xee\xaa\xfa\x78\x09\x98\x0b\x09\x9c\xd9\xad\xcf\x85\x9c\xb1\x9e\x6b\x40\xc7\x6d\xdf\xde\xdc\xb5\xb6\x0b\xb5\x24\x2a\x65\xac\xf4\x4c\x6d\x1b\xdf\x64\xf5\xcb\x70\x4f\xff\x50\x60\x70\xe8\x5b\xd4\xcc\xf5\x1c\x4e\xed\xd8\x3b\x93\xf6\xc1\x7b\xfb\x78\xde\x28\x6e\x59\x1b\x93\xce\xb3\x27\x66\x62\xd2\xdc\x4a\x98\x2f\x5e\xe2\x87\x4b\xe6\x87\x45\x3b\xb7\x0a\x5a\xda\x7e\x6d\xaf\x53\xa7\x8d\x98\x86\x07\x03\xdd\x37\xfb\x1a\x97\x29\x0f\x86\xe3\xa5\x0b\xc0\xba\x7b\xfc\x8d\x36\x2b\xfb\xd9\x3a\xca\x5a\xc5\x27\x44\x01\x6b\x77\x11\x17\xf4\xea\x96\x61\x7d\xdd\x99\xd7\xdd\xa1\xe8\x39\x77\x00\x25\xaf\x91\x7f\xe3\x24\xd2\xf6\xf1\x3c\x68\xbe\xd9\x37\xda\x1d\x1c\x0d\xf4\x8e\x34\x03\x7b\xf9\x00\xeb\x6b\x5f\x12\x53\xf5\xd4\xa3\x54\x8d\xe5\x2b\x57\xd7\x0b\x54\xa8\xc5\xe5\xf2\xb3\xa6\x20\x9e\x87\x8a\x4a\x51\x3c\x14\xa1\xc2\x6a\x70\x94\xac\x32\x09\x2e\x25\x32\x35\x19\xa4\xf9\x13\x3a\x5e\x00\xb9\xa8\x04\x2e\x95\x5f\x08\xe7\xec\x81\xde\x91\xf3\xb1\x3d\xfe\x73\xb6\xca\x70\xcf\x39\xc8\x30\xea\x61\x9c\x86\xe6\xe2\x8a\x00\xbc\xde\x28\x64\xc3\x50\x01\x9e\xfe\x81\xe0\xc8\x8f\x43\x01\xef\x50\xdf\xad\x40\x2f\xc3\xcb\xb7\xb4\xe8\xd5\x01\xf5\xae\x14\xed\x1c\x8f\x5e\x89\xaa\xfe\xe1\x0e\x0f\xa8\x7c\x05\x79\xa4\xd5\xf9\x04\xd2\xac\x8c\xe8\xf1\xab\xb4\xac\x48\x63\x90\xd3\x54\xfa\x7a\x47\x3b\xad\x40\x59\x52\x91\x26\x29\x13\x74\x04\x09\x50\xa5\x89\x1e\xea\xff\x3a\x7e\xaa\xe8\xe7\x2d\xbf\x0a\x7c\x6a\x94\x56\xd8\xbb\x3f\x28\x30\xd2\x15\x63\x55\x0d\x2a\xe0\x7b\x50\x27\xa8\x96\x43\x34\x26\x85\xc1\xff\xef\x5d\x10\xe6\xa3\xeb\xf8\xab\x23\x28\x69\x5e\x12\xe8\x44\xd5\x8a\x8c\xf5\x74\x63\x35\xe0\xe3\x91\x26\xb0\x21\x2f\x87\xbc\x9c\x14\x93\x05\xa8\x41\xdf\x44\x4c\x28\x45\xb1\x8a\x86\x22\x2c\xa7\xa9\x27\x33\x87\xf7\x64\xa4\xc0\x51\x24\x32\xa0\xa3\x0d\xc4\x90\x58\xf5\xc8\xac\x16\xad\x09\x2c\xb7\xdb\x00\x5d\x89\x57\x3f\x29\x24\x18\x45\x18\xd0\x7c\xa9\x3b\x38\xda\x1f\xec\x0f\xdc\x0e\xf6\x06\x46\x07\xfb\x86\x07\xba\x03\xa0\xab\x0b\x78\xee\xc2\x90\xa7\x99\xa2\xca\x3b\x3b\x2a\x23\x19\x0a\x48\x84\xa7\x56\xb5\xba\xd0\xae\xad\x7c\x38\x29\xa0\x6a\xae\x6c\xfc\x04\x03\xc2\x50\x86\x62\xb8\xea\x40\x22\x27\xc4\xc3\xf0\x6c\xef\x15\xf6\x4c\x43\x16\x27\xbf\x31\x29\xc4\x80\x33\x37\xe9\x5f\x13\xfd\x3b\x00\x00\xff\xff\xa6\x80\x4c\xae\xa8\x0a\x00\x00")

func scriptsGitlabCiYmlBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGitlabCiYml,
		"scripts/.gitlab-ci.yml",
	)
}

func scriptsGitlabCiYml() (*asset, error) {
	bytes, err := scriptsGitlabCiYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.gitlab-ci.yml", size: 2728, mode: os.FileMode(420), modTime: time.Unix(1638944799, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGolangciYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x5d\x8f\xdb\x3a\x0e\x7d\xcf\xaf\x20\x92\x87\xb6\xc0\x38\xe9\x4c\xdb\xc5\xae\x5f\xbb\x2d\x50\xa0\xd8\x7d\x58\x2c\xf6\x65\x81\x8e\x22\xd1\x36\x31\x32\xa5\x2b\x4a\xf9\xf8\xf7\x17\xb2\x9d\x44\x76\x5a\xb4\x17\xa8\x81\x19\x58\x47\xe6\x11\x25\x52\x87\x8c\x25\x8e\x18\xa4\x12\x8c\x91\xb8\x95\x7a\x05\x00\x60\xd0\xb7\x49\x05\x33\x8e\xf2\x63\x49\x62\x15\xcf\x1e\x6b\xd8\x5b\xa5\x5f\xf2\xf8\x3a\xe9\x95\x7e\x51\x2d\xca\xed\xf3\xfc\x6c\xc0\xba\xb6\x25\x6e\x81\x04\x94\xb5\xee\x88\x06\x1c\xdb\x33\xec\xcf\x79\x2a\x45\xb2\xb2\xfd\xea\xda\x87\x3c\x0a\x49\x16\xd6\x85\x55\x74\x90\x04\x47\x63\xe2\xab\xf1\x65\xe1\x99\x61\x05\x2d\xc5\x2e\xed\xb7\xda\xf5\x3b\xa1\x90\xbc\x20\xef\x16\x2b\x5c\x3c\xae\x8e\x14\xbb\x0a\x43\x70\xa1\xea\x51\x44\xb5\x58\xff\x32\x5b\x0d\xeb\x5f\xdc\xe1\x7a\x3c\xd5\xe4\xed\x8d\x3d\x76\x01\xa5\x73\xd6\xd4\xf0\xf8\xf6\xed\x00\x37\x89\x2d\x72\x79\xe8\x8c\x72\x9b\xce\x8f\x44\x15\xb1\x47\x8e\x52\xc3\x87\x11\x6e\x9d\x76\x2c\xf1\x66\xd6\x13\x57\x99\x07\x9e\x66\x90\xd3\x3a\x85\x80\xac\x33\xe7\xd3\xc5\x34\x50\x24\x7d\xb3\x45\x56\x7b\x8b\xa6\x8a\xaa\x95\xe5\x49\x18\x52\x2d\x3b\x89\xa4\x17\x13\x78\xf2\x18\x28\x7b\xa5\xec\x62\xca\x79\x62\x72\xac\x22\x9a\xc5\x8c\xc7\xd0\xb8\xd0\x2b\xd6\xcb\xf8\x49\x3c\xdb\x1b\x66\x48\x46\x97\x74\x87\xfa\xe5\xde\xa9\xe4\xbf\xf4\xde\x85\x08\x1b\xe8\x62\xf4\x52\xef\x76\x45\xc8\x5a\x57\x8d\x5b\x2c\xde\x48\x24\xa1\xec\xfe\xfe\xfe\xc3\x82\x8b\x9a\x4f\x56\xf0\x63\xa7\x88\x97\xdb\xd0\x51\xd9\xaf\x14\x31\xdc\xed\xf0\xd8\x9d\xff\xe5\xbe\x12\xc7\x25\x1e\x94\xf7\x18\x3e\x27\x5e\x1e\x97\x76\x7d\x3e\x2b\x34\xff\x4e\xf1\xa3\x33\x78\x09\xc5\x59\x5b\x37\x8f\xa2\x76\xbd\xb7\x78\xa2\x78\xae\xe1\xe9\x12\x6d\x1a\xb6\x5b\x1c\x84\x75\x5a\xd9\xca\x07\x6c\xe8\x94\x63\x3b\xdb\xbe\x55\xdc\x6a\xba\xbe\x54\xf6\xe2\x69\xeb\x7a\x2e\x2e\xf8\x5c\x00\xae\x4e\x94\x9f\x5c\x9e\x0d\x18\xc7\xaf\x22\x10\x6b\x9b\x0c\x42\xec\x10\xd6\xce\x63\x50\x91\x1c\xaf\x41\xb1\x81\xb5\x12\xa1\x96\xd7\x77\xc6\x53\x14\x41\x2b\xc1\x87\x80\x31\x05\x9e\xdc\x39\x60\x91\xc3\xc3\x67\x95\x74\xca\xb8\x23\x71\x5b\x43\x0c\x09\x7f\xe2\xac\x0f\xc4\xb1\xb9\xf7\xb7\x49\xac\xe5\x1e\x1e\x83\xf1\xfa\xa7\xa7\xb5\xf3\x2f\xed\xae\xbc\xcd\x6f\xb6\x5f\xb8\x71\xcd\xef\x24\xfc\x9f\x0a\xfc\x5b\x09\x3f\x65\x49\xfb\xad\x8c\x9f\x55\x54\x76\x64\xb4\xd6\xce\x45\x2a\xcb\x4d\x1b\xbb\x1a\x1e\xdf\x8f\x59\xda\x2b\x4b\x2d\x63\x99\x5f\xa9\x6d\x51\x62\xc5\x78\x2c\x82\xd9\x93\x88\xc7\x19\x5d\x4e\x66\xac\xe1\xbf\xff\x19\x20\x76\xd9\x9d\xfc\x77\xfb\x64\x50\xda\xca\xa2\x32\xc4\x6d\x25\x5e\x69\x1c\x29\xaf\x99\x19\xf0\x8f\x44\x01\xa1\x57\xba\xcb\xee\x05\x54\x26\x8b\xc8\x44\x07\x86\x02\xea\x48\x07\x14\x78\x4d\x5b\xdc\x42\x2e\x03\xc0\x0e\x26\x52\x18\x48\xdf\x2c\x56\x4c\x9c\x04\x4d\x0d\x8d\xb2\x92\xd7\x0a\x38\xe8\x8e\xe2\x33\x8c\x53\xf7\xf4\x57\x86\xc9\xa3\x0a\x4f\xde\x2a\x1e\x2e\xca\x8d\x68\xee\xb4\x62\x28\xbe\x82\xc6\x85\x5f\xe0\x15\x8f\x9a\x1a\xd2\x3f\x22\xbd\xdf\x78\x74\xb0\x47\xb8\xd8\x81\xda\xbb\x14\xe1\xd8\x91\xee\x60\x6c\x0a\x72\x51\xdb\xe3\x70\x1a\x2f\xe4\x3d\x9a\xd5\x6a\xea\x16\xc6\x50\x6c\xc0\x5b\xcc\xb7\x18\x8c\x03\x76\x71\x28\xd1\xcf\x63\x01\xa9\x94\xb5\xcf\x35\x50\x7c\x25\xb9\x99\x08\xa8\x73\x05\x18\x94\xe1\x48\xd6\xe6\x95\x03\xf6\xee\x80\x06\xc4\x39\xde\x4e\x84\xc4\x07\x0c\xf9\x43\xed\xb8\xa1\x36\x8d\x8a\x32\x46\xa7\x64\x1e\x88\x9e\xa7\xca\xf0\x9c\x1d\xcd\xeb\x8b\x56\x76\x88\xb2\x49\x21\xbb\x9d\xbc\x51\x11\x05\x5c\x03\xf7\xf2\x37\x19\x67\xba\x22\x1f\xc7\x35\x6e\xa9\x56\xc1\xde\x99\xac\xcb\x82\x05\x66\x50\x19\x7d\x11\xee\x0b\x34\x76\x4c\x25\xe4\x5a\xb1\x38\x43\x92\xb7\xc5\x10\x43\x18\x64\xae\x80\xc6\x0e\xa0\x00\xa6\xe2\x3e\x47\x86\x32\x36\x87\xb2\x8f\x33\xa4\xe9\xe7\x46\x53\xd5\x98\x61\x3d\x9b\xd9\x78\x14\xd0\x2c\x97\xac\x7a\x9c\x4d\x09\xce\x17\x14\xca\x95\x69\x06\x1d\xb0\x5c\x91\x18\x9b\x66\x2c\x02\x05\x6a\x6d\x79\x00\x97\xdb\x5f\x40\xac\x5e\xd0\x84\x19\xd3\x4d\x02\x0a\x30\xb8\xa3\x7c\xe7\xfc\x72\x7b\x44\xfa\x1e\x0d\x49\xc7\x7b\xf4\x6c\x71\x09\xe6\x16\x77\x89\x25\xd6\x6e\x48\xcc\x19\xe6\x55\x50\xfd\x0c\xc9\x12\x50\x00\x07\x35\xb9\x37\x25\xf7\x78\x21\xcb\x0c\xdb\x40\x05\x4a\x34\xd1\x6d\xc5\xcd\x18\xce\x3c\x66\xd7\x5a\xb7\x57\x56\xca\x09\xd7\x32\xc5\x02\x30\x6e\x3e\x3a\x15\x23\x0c\xe1\xf1\xf1\xdd\x15\xb8\x68\xf2\x15\x60\x94\x48\xcd\x75\xe8\x03\x66\x9d\xd3\x57\x20\xa2\xc4\xb2\xc3\xce\xd8\x51\xec\x6a\x35\x36\x50\x97\x3d\x7c\x3a\xe5\x36\x20\x5f\xb8\xf9\xad\xf5\x18\x2a\xaf\x62\xf7\x30\xbc\x8d\xd2\x31\xbe\x47\x3c\xc5\xe1\x0a\xe7\x81\xb8\x14\xa6\x16\x10\x07\x26\xac\x42\xb2\xe5\x8f\x89\x0a\x32\x4d\x0d\xdf\xb2\x43\xff\xdf\xb6\xae\x28\x6b\x33\x45\xba\x3d\x97\xec\xbe\xc2\x7f\xb5\x39\xfc\xc7\xd3\xdf\xca\xb4\xfd\xf1\x2a\x8b\xcb\x08\x90\x37\x57\xc3\x3a\x31\xa3\xce\xbf\x28\xc2\xf9\x9f\xd8\x60\xa8\xd7\xab\x55\x48\x53\x73\x9f\x05\xb5\x32\x14\x66\x9b\xcc\xbb\xdb\xe5\x7f\x46\x45\xf5\x0d\xa3\x9e\xdd\xa6\x88\x81\x95\xdd\x69\xa5\x3b\xfc\xde\x44\xc0\x7c\x67\xc9\x7d\x77\xce\xed\x93\x44\x72\xab\xd5\xe6\xaa\x84\xf9\x00\xe6\x01\x5b\xfd\xe0\x8c\x16\xfd\xc1\xee\x48\x2f\xb4\xfb\x38\xb3\x14\x0c\x07\xd2\x53\x56\xcf\xb4\xb6\x3a\x60\x90\xa1\xd8\x3d\x6e\x9f\xde\x6d\x4f\xb0\x19\xca\x44\x6e\x19\x73\xb7\x6a\x60\x9a\xcf\xe5\x28\x6b\x38\x71\x0c\xce\x24\x8d\xc0\x78\xbc\x9c\x3b\x24\xce\x3f\x31\x74\x44\x63\xcf\xc3\x1a\x3e\xa0\x57\x61\x26\xd4\xa8\x3b\x07\xeb\x0e\x03\xc2\x17\xd0\x8a\x21\x24\x06\x9d\x24\x0e\xfb\xec\x7b\xc5\x46\x1e\x60\x9f\x62\xae\xf3\xa3\xfd\x98\xa7\x8c\x68\xd0\x0c\x75\x36\x76\x24\x43\x59\x5f\xaf\xfe\x0c\x00\x00\xff\xff\x4a\xc2\xd4\x8a\x19\x0f\x00\x00")

func scriptsGolangciYmlBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGolangciYml,
		"scripts/.golangci.yml",
	)
}

func scriptsGolangciYml() (*asset, error) {
	bytes, err := scriptsGolangciYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.golangci.yml", size: 3865, mode: os.FileMode(420), modTime: time.Unix(1636010444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xe2\x38\x10\xfe\x8c\x7f\xc5\xa8\x07\x1b\xa2\xab\x89\x16\x56\xa8\x42\x8a\x6e\x79\x49\x01\x5d\x21\x08\xe8\xde\xed\x7d\x09\x6e\x62\x52\xdf\x3a\x09\x6b\x3b\x2d\x77\xea\x8f\x3f\x39\x6f\x94\xb6\xa8\x55\x6f\xf7\x03\x28\xb1\xe7\x99\xc7\xf3\x8c\x67\x26\xad\xc5\xc4\x9d\x7f\xed\x41\x40\xb7\x24\xe5\x0a\x38\x8b\x15\x28\x2a\x15\x08\xe2\x53\x10\x69\xac\x97\xd2\x3d\x04\x44\xdc\xb3\x18\x22\xe2\x27\x12\xee\x59\x1c\x24\xf7\x32\xdf\xea\xb4\x8b\xcd\x4e\x3b\xdf\xee\xb4\x4b\x83\x4e\x1b\x08\xe7\xfa\xd7\x69\x83\xa0\x9c\x12\x49\x11\x8a\x49\x44\x7f\xb3\xeb\x4d\x79\x4b\x39\x87\x1b\x22\xa9\x5e\x81\xcd\xee\x3e\xd8\x98\x68\x21\x92\xbf\xa9\xaf\xe6\x24\xa2\x76\xbd\xa9\x77\xaa\xb5\x11\x13\x15\x6c\x77\x1f\x98\xc8\x5d\x65\x66\x9b\x34\x73\x80\x25\x3c\x80\x12\x60\xf4\xf1\x5f\x06\x18\x04\xff\x6b\x6c\x90\xbb\xea\x2f\x87\x93\x9e\x8d\xd8\x96\x7e\x87\x66\xbd\xe9\xae\xcc\xf3\x3f\xf2\xe3\x79\xf3\xb5\x89\x6a\xe5\xc6\x62\xe9\x0e\x9d\xd5\xca\x5d\x7a\x1a\x31\x5d\x3b\xc3\xf5\xf5\xd2\x31\xcf\xfb\xb3\x51\xf7\x93\x89\x6a\xb5\xdc\x15\xd8\x40\xa2\xa0\xfb\x09\xd5\x68\x1c\xb0\xed\xeb\xf8\xfd\x45\xf7\x08\xdd\xb9\xe8\x96\x58\xca\x25\x45\xb5\xeb\x79\x7f\xe6\x78\x0b\xe8\xd9\x50\x46\x57\x04\x14\x3d\x3a\x5e\x61\x95\xf9\xf3\x5e\x39\x50\x9c\x43\xb6\x8c\x2b\x2a\xa0\x71\xd1\x3d\x3f\xe0\xcd\xf3\x53\xa7\x79\x06\x24\x22\x6a\x9c\x46\x12\x11\x55\x71\x64\xff\x6e\xaa\x76\x69\x91\xa4\x43\xc6\x4c\xcb\xbb\x61\xb1\x55\x2d\xcd\xb3\x8c\xce\x08\x8b\x2f\x19\xa7\x0b\xa2\x6e\x9f\x98\xfb\x51\xf0\xd4\x7a\x9c\xcc\x92\x20\x4f\xf5\x2d\x25\x01\xe0\x18\x3e\x42\x98\xb4\xa2\x24\x80\x07\xf0\x53\x05\x38\x00\x03\x0c\xc0\x5b\x68\x6f\xd0\xe2\x5b\x78\xc5\xa4\xaa\xee\x4a\x98\x00\x67\x52\x41\xcb\x6a\xb5\x5a\xf0\x00\xa1\xa0\x3b\xc0\x77\x60\xdd\xd1\x38\x48\x84\x65\xa2\x81\x20\xb1\x7f\x9b\x33\x84\x4c\x81\xfc\x27\xba\x49\x38\xf3\xb1\xa0\x5b\xc0\x58\xde\x26\x42\x01\xfe\x0e\x13\xa7\x3f\xda\x54\x57\xe9\xd2\xbd\x9e\x8f\xbc\x81\xeb\xfe\x9e\x49\x53\xc9\x37\x9c\x7a\x43\x77\x36\x9b\xae\xbd\xa5\x73\xe9\x69\xf5\x72\xe9\x1e\xb1\xbc\x68\x74\x2c\xe7\x20\x65\x3c\x18\x27\x5f\xa8\x90\x2c\x89\xed\x4d\x98\xc0\x5d\xfe\xfc\x20\x69\x00\x98\x82\x21\xad\xc3\x22\x58\x56\x68\x6c\x72\xd4\x9a\xe9\x40\x02\xa2\x28\x18\xbf\x36\xbe\x36\xa2\x46\xd0\x6a\x4c\x1a\xb3\xc6\xaa\xb4\xb8\xe4\x24\x94\x36\xe6\xc1\x56\x3f\xc0\x19\xa6\x7b\x55\xbc\xd8\x58\x2a\xa2\x98\x0f\xf8\x4f\x30\xea\xcd\x4a\x7b\xd3\x62\xb1\xa2\x22\x26\xdc\xda\x7d\x0b\xad\x88\xc4\x24\xa4\xa2\x35\x9e\xae\x07\xcb\xfe\x7c\x38\xb1\xeb\xcd\x43\x80\xa6\xa1\xe1\x6f\x42\x4f\xfa\xab\x49\xae\xba\xa0\x77\x78\x47\x84\xa4\x99\xce\x65\x66\xfd\x8f\xf8\x62\xf3\x36\x6f\x83\xeb\xe9\xd5\x68\x3d\x9d\x39\xfa\x2c\xa5\x10\xe6\x5b\x03\x71\xbf\x38\xcb\xd5\xd4\x9d\x97\xe0\x4a\x7b\xd3\x38\x43\x55\x72\x15\x09\x65\x96\xce\x83\x8e\xbd\x12\x91\xbd\x99\x80\x55\xa6\x69\x61\x7b\x56\xe4\x13\x15\x3d\xb6\x87\x6a\x9f\xc3\x04\x6e\x34\x00\x9e\x00\x13\xa8\x37\xab\x32\x32\x9f\x94\x01\xd6\xcd\xeb\xf0\xa4\xcb\xd0\x84\x7a\xf3\x71\x29\x99\x08\xe9\x0e\x9e\x53\x70\x12\x87\x3e\xc3\x59\x4b\xd7\x8d\x1c\x63\xba\xf7\x79\x1a\x50\x9c\x4a\x8a\x8b\xd3\xd8\x5b\xc2\x25\xcd\x4b\x03\x21\xdd\xf9\x8b\xf3\x65\x43\x00\xdf\x41\xbd\x59\x94\x93\x89\x90\x9e\x09\x7a\x7b\x38\x76\x3d\x67\xde\x1f\x5c\x39\x23\x5b\x17\x62\x61\x9c\x8d\x8c\xa2\x58\x8e\x60\x69\xfc\x73\x83\xae\x7d\xf6\x83\x23\x27\xf0\xe1\x03\x8c\x5d\x6f\xe4\x0c\xae\xc7\xb6\x12\xa9\x0e\xf0\x75\xbf\x08\x11\xce\x7b\xc7\x03\xaf\x98\x64\x28\x9b\x61\xbd\xe7\x13\xaf\x9a\x74\x99\xf2\xe9\x5e\x07\x3a\x76\xdd\x95\x9d\x7b\x19\xbb\xda\xb3\x9d\x35\x68\x78\x9f\x00\x99\x23\x9c\x7b\x78\x96\xed\xc7\x63\xb9\xa2\x2e\x16\x7f\x00\x77\xee\xe9\x14\x79\x11\x7b\xc5\x5b\x7e\x16\xfc\x00\xe2\xc2\xd5\x29\xe6\x22\x0d\x2f\x8b\xdd\xb9\xe8\xfe\x2f\xa9\x35\xfe\x84\xd0\x87\x4f\x9c\x13\x62\xbf\x9f\xbb\x90\xfa\x45\xf2\xea\x92\x9d\x92\xfa\xfd\xb4\xa5\xd0\x2f\xf2\x16\x9f\x6c\x3d\xf8\x05\xb6\x89\x80\x90\x29\x4e\x6e\xb0\xcf\xde\x79\xc7\xdf\x7c\xad\xff\x0b\x00\x00\xff\xff\xa5\x86\xe5\xc4\x96\x0a\x00\x00")

func scriptsMakefileBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMakefile,
		"scripts/Makefile",
	)
}

func scriptsMakefile() (*asset, error) {
	bytes, err := scriptsMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/Makefile", size: 2710, mode: os.FileMode(420), modTime: time.Unix(1638941839, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBuildDefaultDevProjectnameConfigSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x6f\x6f\xd2\x40\x1c\xc7\x9f\xf7\x55\x5c\xba\x27\x9a\x94\x7f\x9b\xd3\x6e\x09\xcf\x78\x20\x89\x31\xc6\x77\x70\xeb\x6a\x29\x83\x96\x50\x96\xc8\x33\x94\xb1\x98\x99\x0e\x74\x23\x90\xca\x9c\x64\xb0\xcd\xa9\x03\x09\x26\x0d\xb5\xee\xcd\xdc\xef\xae\xf7\x2e\x0c\x54\x4c\x35\xdb\xb3\xbb\xe4\xee\xf3\xfd\xb7\x82\xa0\xf9\x9a\xb6\xc7\xc1\x68\x4a\xbb\x87\x9b\xc2\x0a\x42\xe8\xb9\xaa\xe9\x56\xa5\x5c\x7d\x6c\x5a\x15\x74\x0f\x6e\x1a\xbc\xef\xdd\x47\xbc\xdd\x83\x7a\x93\x78\x47\x30\x3b\x82\xde\x18\x4e\x6a\x12\x82\x81\x43\xdb\x63\x5a\x6f\xc0\xfe\x0f\xe2\xbe\xa5\x9d\x4f\xbc\x57\xe3\x0d\x9b\xf9\xd7\x12\xe2\x5e\x37\xb8\x1e\x40\xed\x27\x71\x67\xa8\xfc\x87\x19\x57\x8c\xd8\x96\xaa\xe7\x75\x43\x8b\xe3\x82\x5e\xdd\x35\x14\x2b\xae\x98\xc5\x85\x70\xb6\x88\x35\xf5\x29\x2e\xaa\x56\x09\x2b\xea\x1d\xd2\xef\x7c\x68\xd9\xec\xf3\x8c\x77\xa6\xf3\xc3\xc5\x58\x42\xbc\xe6\x80\xeb\xd2\xee\x88\x78\x43\x94\x40\xf0\x66\x9f\x3b\xc7\xcc\xd9\x23\x6e\x8d\xb8\x57\xf0\xad\xc3\xbe\x9e\x13\x77\x22\xa1\xa0\x7f\xc9\x06\x33\x14\x65\x24\x42\x38\xb4\xec\x85\x85\x67\x66\xb9\xf2\x44\x9f\xe7\xe6\x27\x1f\x97\xfa\xb4\x67\xc3\x41\x3f\x38\x7f\x45\x9d\x29\xef\x4d\x98\xb3\xc7\xbe\x8c\xa0\x79\xb6\x28\x80\xb8\x57\xe1\x8d\x78\x43\xb0\x0f\x82\x8b\xf7\xbc\xee\xc3\xd0\x0f\x5d\x2c\xa0\x19\xb5\x54\x30\xab\x19\xb3\x88\x75\x23\x92\xaa\x7e\xc9\xfc\x09\x3d\x1c\x42\xf3\x2c\x54\x80\xd3\x53\x68\xd9\x12\x62\xc7\xdf\x83\x9b\x16\xf3\xa6\x61\x95\xb4\xd9\x22\xbf\x3e\x44\x48\xd9\xcc\xff\x94\x6c\xe6\xae\x5f\x42\x74\xcd\xb4\xf8\x77\x87\xbc\x8e\x5f\xea\xd8\xd0\x72\xbb\xdb\xa6\xa1\xcd\x27\x10\x85\x7f\xfb\x4f\x8b\xcb\x37\xa2\xb0\xac\x25\x2d\xca\x49\x39\x29\xc9\x49\x39\x25\x0a\xd1\x58\x69\x31\x57\xa9\x94\xac\xcd\x44\x62\x47\xb6\x70\xa9\x74\x2b\x7f\xe9\x3e\x2d\xa6\x56\xd7\x1e\xac\x3f\x7c\x24\xc7\xf0\x96\xb2\x1d\x53\x5f\x68\xb9\x98\x9e\xdf\x29\xc4\xb0\x9a\x5c\x5d\x4b\x6d\x28\x6a\x6a\x63\x5d\x14\x84\xdf\x01\x00\x00\xff\xff\xa1\x31\xfb\xee\x9e\x02\x00\x00")

func scriptsBuildDefaultDevProjectnameConfigShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBuildDefaultDevProjectnameConfigSh,
		"scripts/build/default/dev/#ProjectName#/config.sh",
	)
}

func scriptsBuildDefaultDevProjectnameConfigSh() (*asset, error) {
	bytes, err := scriptsBuildDefaultDevProjectnameConfigShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/build/default/dev/#ProjectName#/config.sh", size: 670, mode: os.FileMode(420), modTime: time.Unix(1636010444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGenerateConfigsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\xcf\x6f\xe3\x44\x14\xbe\xcf\x5f\xf1\xd6\x31\x1b\x40\xb8\x43\xb3\x65\x85\xbc\xeb\x42\xd5\xb8\xab\xa5\xb4\x59\xa5\x69\x39\x6c\xab\xd6\xb1\x27\xf6\x54\xf6\x8c\x99\x99\xa4\xad\x8c\xa5\x95\x56\x20\x4e\x20\x24\x4e\xc0\x09\xed\x09\x09\x2d\xc7\x4a\x48\xfc\x35\x8d\x56\xfb\x5f\x20\xff\x8c\xd3\x26\xed\x72\xc3\x87\xc4\x93\xf7\xbd\x79\xf3\x7d\xdf\x9b\x97\xd6\x3d\x3c\xa4\x0c\x0f\x1d\x19\x20\xf4\x55\xaf\xbf\xdd\x7d\xda\xb7\x4e\xe2\x33\xef\x04\xa1\xcd\x2f\xf7\xf7\x06\x76\xdf\xd2\x57\x91\xbd\x7b\x60\xe9\x1d\xb4\xb9\xd3\xb5\xf4\x07\xe8\x8b\xfd\x9d\x67\x03\x7b\x6f\x60\xe9\x6b\x68\x7f\xcf\xde\x7c\xd2\xb3\xf4\x4f\xb2\x60\x0e\x4b\x1e\xe2\xfb\x58\x3b\xbc\xaf\xa5\x08\xb9\xe1\x58\x2a\x22\x36\x84\xb0\xde\x3f\x21\x6e\xc0\x41\x2f\x77\x85\x6f\x40\x12\x0f\xda\x12\x7f\x84\x0f\x19\xf6\xdb\x27\x1f\x20\xc2\x26\x4d\xa4\xbd\x7b\xb0\x08\x85\x5a\x70\xf5\xf7\xb7\xd3\x1f\x7f\x9a\x5e\xbe\x9c\x7e\xff\xd7\xf4\xe7\xd7\x57\x97\x2f\xde\xfe\xfa\xdd\x9b\x7f\x5e\x5d\x5d\xfe\x89\xe8\x08\x9e\x83\x9e\xb4\x66\xa5\x9f\x7f\x7e\x94\x82\x41\xbe\x86\x55\x38\x7a\x04\x2a\x20\x0c\x01\x00\xe4\xc0\x7b\x60\x78\xa0\xe9\x25\x73\x3c\x1c\xd3\xd0\xc3\xd5\x19\xb5\x39\x7c\xf6\xe4\x07\xd3\x88\x10\x5c\x98\x50\x56\x80\x76\x85\x6f\x03\xe3\x0a\xc8\x39\x95\x4a\x6a\xb0\x7e\xbf\x33\xcb\x3b\xa7\x0a\x56\xf3\xe5\x88\xa2\xfc\x7b\x11\x8b\x37\x3f\xbc\x9e\xfe\xfe\x32\x63\x51\x1f\x50\x4f\x5a\x85\x2c\x4b\x58\xbc\x1b\x13\x9c\x89\x79\x93\xce\x0d\x4a\x84\x4d\xa8\xe0\x2c\x22\x4c\xcd\x68\xe5\xc9\xcb\xb9\x5d\xe3\xd7\xe4\x58\xed\x6e\x65\x0f\x48\xca\xfc\x90\x64\x35\xc0\x61\x5e\xb5\xac\x54\xcc\x31\x5a\x99\xe6\x8e\x45\x08\x86\x11\x10\xc7\x23\x02\xb4\x67\xfd\xa7\x07\x1b\x03\xdb\x18\xf4\xb6\xed\x5d\xd3\x8f\xb7\x55\xb0\xd6\x97\x67\x3c\xf8\x74\x12\x3c\x08\x64\x77\xbf\xa3\x41\xa0\x54\x2c\x4d\x8c\x7d\xaa\x56\x4e\xa9\x73\x4e\x1d\xe6\x07\x63\x8f\x33\x7f\xc5\xe5\x11\x76\x62\x8a\x27\x6b\x38\x16\xfc\x94\xb8\x4a\xe2\x87\x9d\x55\x2c\x48\xcc\x25\x55\x5c\x5c\xe0\x11\x0d\x89\xc4\xd2\x15\x34\x56\xf2\xbd\xce\xd6\x8a\x4f\x55\xe8\x0c\x0d\x97\x1a\x8a\x44\x71\xe8\x28\xb2\x72\x11\x85\x58\x38\x67\x9f\x09\x32\xb2\x22\x27\x3f\x74\xd1\x9e\x12\xb7\x93\x64\xb0\xf1\x64\x2f\x4d\xdb\xb9\x58\xd8\x6f\x46\x4a\x19\xb3\xa0\x56\xb7\xd6\x3c\xc4\xde\x3d\x28\xc2\x99\x4d\xd7\xb2\x77\xba\x65\xe6\x4e\xf7\x5a\xa8\xba\x87\x45\xbc\x5a\x5d\x03\x15\x17\xb4\x80\x14\xef\x37\x0b\xd4\xe5\x8b\xf7\x0c\xb0\x0e\x0d\x09\x5c\x1e\xc5\x21\x29\x24\x40\x0d\xc7\x3f\xae\x3a\x3a\x33\xbc\x05\x6f\x7f\x7b\x31\x6b\xe8\x57\xbf\x5c\x5d\xfe\x31\x6b\xe8\xff\xa3\xa3\xc6\x88\x0b\x23\x1a\x87\x8a\x1a\x65\x17\x1a\x84\x4d\xee\xf0\xb9\x34\x7a\xa1\xd3\x33\xab\x6f\xf1\xba\x30\x7b\x89\xdb\x85\xdd\x4b\xfc\x6e\x18\x7e\x9b\xe3\xb5\xe5\xcb\x3d\xaf\x4d\x7f\x67\xd7\x51\x71\x93\xfb\xce\x99\xb9\x0c\xa3\x21\xd7\x51\xcb\x37\x70\x84\xa2\x23\xc7\x55\xd2\xd2\x34\x84\x46\x5c\x00\xa9\xee\x3e\x65\xa0\x27\x8d\x81\xfd\xe1\x51\xfa\x08\x3c\x5e\x80\xd8\x24\x2a\x00\xe5\x1c\xac\x82\x77\x0d\xf1\x6a\x77\xac\x67\x5b\xdc\x31\xcb\xe7\x07\xdf\x7c\xea\x7f\x1a\xeb\x0d\x96\x7a\xfd\x7e\xc8\x9a\xc3\xd2\x58\xa4\x91\x51\x17\x35\xf2\xa2\x85\xa0\xb9\xa2\x8f\x1f\x83\xdd\xdb\x82\xf5\x5b\xcc\x41\x4a\x50\xdf\x27\xe2\x38\xa6\x31\x09\x29\x23\xc7\x7a\x52\xed\x97\x1e\xe7\xd2\x45\xa9\x99\x1f\x50\x2a\xc7\x27\x26\x94\x09\x32\xff\xad\x5c\x98\x35\x31\xa9\x84\xa3\x88\x7f\x61\x82\x47\x62\xc2\xbc\xd9\x5f\x0d\x73\xc3\xb1\x47\x4c\x34\x4f\xa8\x62\xba\xb0\x37\x16\x51\x9b\xcb\x07\x38\xe5\x43\x13\x7c\xc2\x48\x56\xf6\xd8\xe5\x6c\x44\x7d\x64\xf7\xb6\x10\xf2\x38\x23\xc5\x07\xca\xba\xd7\xa0\xa0\x49\x9c\x24\x49\xad\x6d\x9a\xa6\x78\xa6\x34\xf6\xb5\x65\x2a\xfd\x1b\x00\x00\xff\xff\xf0\xc4\x7f\x9b\xeb\x08\x00\x00")

func scriptsGenerateConfigsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGenerateConfigsSh,
		"scripts/generate-configs.sh",
	)
}

func scriptsGenerateConfigsSh() (*asset, error) {
	bytes, err := scriptsGenerateConfigsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/generate-configs.sh", size: 2283, mode: os.FileMode(420), modTime: time.Unix(1638939256, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsSourceCmdProjectnameMainGo_ = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8d\xb1\x6a\xc3\x30\x10\x40\x67\xdd\x57\x1c\x32\x04\x7b\x91\x69\xf7\x0c\x69\x87\x36\xd0\x21\x43\x97\x52\x3a\x08\xf9\xac\xa8\x91\x4e\xe6\x74\x09\x84\x92\x7f\x2f\x0e\x59\x1f\xbc\xf7\xc6\x11\x5f\xeb\x72\x95\x14\x8f\x8a\x7d\x18\xb0\xfb\x22\x2f\x9d\xc3\xf7\x5a\x28\x7b\x9e\x70\xcf\x4a\xe2\x83\xa6\x0b\xe1\x27\x85\x23\xd7\x5c\xe3\x15\x3f\x74\x72\xb8\xcb\x19\xef\x6a\x43\xa1\x46\x72\xa1\xc9\x01\x2c\x3e\x9c\x7c\x24\x2c\x3e\x31\x40\x2a\x4b\x15\xc5\x1e\x8c\x9d\x8b\x5a\x30\xb6\x36\x0b\x60\x6c\x77\x90\xfa\x4b\x41\x0f\x5e\x8f\xdd\x98\xd6\x0d\xfb\x3c\x2e\xa7\x38\x16\xcf\x3e\x92\x58\x18\x00\xe6\x33\x87\x7b\xaa\x1f\xf0\x0f\x4c\x9a\x31\x13\xf7\xb5\xb9\x9d\xc4\x36\xe0\x76\x8b\xcf\xb8\xd9\xe0\x03\x7c\x3f\xfd\xac\xc8\x5e\x48\x5a\xaa\x6c\x57\xc5\xcc\x45\xdd\x41\x12\x6b\xe6\xfe\x91\x76\x6f\xa4\x2f\xe7\x94\xa7\x3d\xcf\xb5\x1f\x06\x30\x46\x48\xcf\xc2\x60\x6e\x70\xfb\x0f\x00\x00\xff\xff\x0a\xf8\xdb\xd9\x16\x01\x00\x00")

func scriptsSourceCmdProjectnameMainGo_Bytes() ([]byte, error) {
	return bindataRead(
		_scriptsSourceCmdProjectnameMainGo_,
		"scripts/source/cmd/#ProjectName#/main.go_",
	)
}

func scriptsSourceCmdProjectnameMainGo_() (*asset, error) {
	bytes, err := scriptsSourceCmdProjectnameMainGo_Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/source/cmd/#ProjectName#/main.go_", size: 278, mode: os.FileMode(420), modTime: time.Unix(1636010444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsSourceInternalPkgManagerManagerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xdf\x8b\x9b\x40\x10\xc7\x9f\xdd\xbf\x62\xf0\x28\x28\x88\xbe\x1f\xf4\x21\xb9\x5e\x13\xe1\x7e\x84\x8b\x2d\xf4\x71\xa3\xa3\x2e\x5d\x77\x65\x1c\xd3\x0b\xa5\xff\x7b\xd9\xd5\x33\x09\x85\x92\x97\x64\xc7\x9d\xcf\xcc\x7c\xbf\xb3\x59\x06\x0f\xb6\x3f\x91\x6a\x5a\x86\xa8\x8c\xe1\xee\x07\x4a\xba\x4b\x61\x6b\x3b\xd4\xd2\x54\x90\x1b\x46\x92\x25\xab\x23\x42\x81\x65\x6b\xac\xb6\xcd\x09\x9e\xb8\x4a\x61\xa5\x35\x78\x74\x00\xc2\x01\xe9\x88\x55\x2a\x44\x96\xc1\x4e\x96\x3f\x65\x83\xd0\x49\x23\x1b\xa4\xf9\x1f\x5c\xbd\x9e\x94\x61\x38\x8c\x4a\x57\xa0\x4c\x6d\xc1\xd6\xe0\x51\x4a\x40\xea\xc1\x42\x4f\xf6\xa8\x2a\x84\xdd\x8e\x6c\x0d\xdb\xa2\xd8\x81\xea\x7a\x8d\x1d\x1a\x4e\x45\x7f\x5d\x59\x08\xd5\xf5\x96\x18\x22\x11\x84\x75\xc7\xa1\x08\x42\x83\x9c\xb5\xcc\xfd\xe5\x39\xeb\x7b\xb2\x75\x28\x62\x21\x8e\x92\x5c\xf6\x26\x2f\xb6\xab\xfd\x16\x00\x06\x26\x65\x1a\xc8\x32\x28\x47\x22\x34\x0c\x8d\x62\x38\x90\x34\x65\x0b\xa5\xed\x3a\xc5\x30\xb4\xae\x49\x2b\x87\xd6\x93\xeb\xb7\xd5\xcb\xc3\xf6\xff\xa4\x91\x1d\x8a\x60\xfd\x2d\x7f\xfa\x52\xe4\xcf\x8f\x17\xc9\xb2\xef\xb5\x2a\x25\x2b\x6b\x66\x23\x58\xb9\xdc\xcd\xeb\xf7\xc7\xb7\x7d\xfe\xfa\x72\x91\x7b\x44\x1a\x5c\x9e\xad\xa1\xb1\x5a\x9a\x06\xe4\xec\x9e\x4b\xb8\xa8\xe4\xa4\x65\x19\x6c\x90\xd7\xee\x36\x77\xd6\x36\xc8\xcb\x64\xff\x36\x75\xee\x8b\x7a\x34\xe5\x15\x14\xc5\x1f\xdd\x7f\x8b\x80\x90\x47\x32\x50\x77\x9c\xee\xfd\xe2\xea\x48\x04\x41\xb8\x5e\x86\xbe\x87\x4f\x43\x02\x9b\x45\xf5\x39\x9e\x8d\x73\x96\xcd\x1f\xa7\xf1\x67\x41\xee\x5b\x98\x88\xe0\x6c\x50\x02\x8b\xb1\xfe\xe8\xb6\x93\xc0\xe2\x49\x2c\xfe\x78\x81\x7b\xf7\x56\xa6\xb7\x31\xb0\x24\x76\x93\x5e\x6f\x19\xd8\x42\x85\x87\xb1\x81\x93\x1d\xc9\x09\x9f\x54\x9e\xc9\x48\x56\x15\xcd\x32\x63\x40\x22\x4b\x5e\xad\x1d\x19\x09\xee\x3f\x83\x2b\x96\xbe\xe0\x2f\x8f\x3c\x8f\xef\x51\xfc\x71\x9b\x6e\xa5\xa9\x34\x7e\x1d\x4d\x19\x85\x99\x6f\x33\x75\xcd\xc2\x04\xfc\x21\xcd\x4d\x85\xef\x37\x00\x65\x57\x69\x65\x70\xe1\x1e\xa6\xf8\x06\xd2\xfd\x28\x7d\x26\x77\x53\x7c\x03\x39\x9c\xba\x83\xd5\x0b\xb8\xf7\xe1\x0d\x1c\x93\x2c\xcf\xfd\x0a\x17\xc5\x62\x79\x1f\xde\xae\x27\x35\x30\x9a\x95\xa9\xbc\x69\xde\xe2\x04\xa6\xba\x6e\x77\x7f\x03\x00\x00\xff\xff\x4f\xfb\x3f\xc0\x6a\x04\x00\x00")

func scriptsSourceInternalPkgManagerManagerGoBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSourceInternalPkgManagerManagerGo,
		"scripts/source/internal/pkg/manager/manager.go",
	)
}

func scriptsSourceInternalPkgManagerManagerGo() (*asset, error) {
	bytes, err := scriptsSourceInternalPkgManagerManagerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/source/internal/pkg/manager/manager.go", size: 1130, mode: os.FileMode(420), modTime: time.Unix(1636010444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/.gitignore":                                    scriptsGitignore,
	"scripts/.gitlab-ci-original.yml":                       scriptsGitlabCiOriginalYml,
	"scripts/.gitlab-ci-template-for-multi-cluster-env.yml": scriptsGitlabCiTemplateForMultiClusterEnvYml,
	"scripts/.gitlab-ci-template.backup.yml":                scriptsGitlabCiTemplateBackupYml,
	"scripts/.gitlab-ci-template.yml":                       scriptsGitlabCiTemplateYml,
	"scripts/.gitlab-ci.yml":                                scriptsGitlabCiYml,
	"scripts/.golangci.yml":                                 scriptsGolangciYml,
	"scripts/Makefile":                                      scriptsMakefile,
	"scripts/build/default/dev/#ProjectName#/config.sh":     scriptsBuildDefaultDevProjectnameConfigSh,
	"scripts/generate-configs.sh":                           scriptsGenerateConfigsSh,
	"scripts/source/cmd/#ProjectName#/main.go_":             scriptsSourceCmdProjectnameMainGo_,
	"scripts/source/internal/pkg/manager/manager.go":        scriptsSourceInternalPkgManagerManagerGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": &bintree{nil, map[string]*bintree{
		".gitignore":                                    &bintree{scriptsGitignore, map[string]*bintree{}},
		".gitlab-ci-original.yml":                       &bintree{scriptsGitlabCiOriginalYml, map[string]*bintree{}},
		".gitlab-ci-template-for-multi-cluster-env.yml": &bintree{scriptsGitlabCiTemplateForMultiClusterEnvYml, map[string]*bintree{}},
		".gitlab-ci-template.backup.yml":                &bintree{scriptsGitlabCiTemplateBackupYml, map[string]*bintree{}},
		".gitlab-ci-template.yml":                       &bintree{scriptsGitlabCiTemplateYml, map[string]*bintree{}},
		".gitlab-ci.yml":                                &bintree{scriptsGitlabCiYml, map[string]*bintree{}},
		".golangci.yml":                                 &bintree{scriptsGolangciYml, map[string]*bintree{}},
		"Makefile":                                      &bintree{scriptsMakefile, map[string]*bintree{}},
		"build": &bintree{nil, map[string]*bintree{
			"default": &bintree{nil, map[string]*bintree{
				"dev": &bintree{nil, map[string]*bintree{
					"#ProjectName#": &bintree{nil, map[string]*bintree{
						"config.sh": &bintree{scriptsBuildDefaultDevProjectnameConfigSh, map[string]*bintree{}},
					}},
				}},
			}},
		}},
		"generate-configs.sh": &bintree{scriptsGenerateConfigsSh, map[string]*bintree{}},
		"source": &bintree{nil, map[string]*bintree{
			"cmd": &bintree{nil, map[string]*bintree{
				"#ProjectName#": &bintree{nil, map[string]*bintree{
					"main.go_": &bintree{scriptsSourceCmdProjectnameMainGo_, map[string]*bintree{}},
				}},
			}},
			"internal": &bintree{nil, map[string]*bintree{
				"pkg": &bintree{nil, map[string]*bintree{
					"manager": &bintree{nil, map[string]*bintree{
						"manager.go": &bintree{scriptsSourceInternalPkgManagerManagerGo, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
